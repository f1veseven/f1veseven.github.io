<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git-all-secret</title>
      <link href="/2022/03/26/git-all-secret/"/>
      <url>/2022/03/26/git-all-secret/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍工具git-all-secret，用于搜索github仓库。但笔者在测试的时候docker环境中的工具无法解析dns，而且不能挂起docker进入到bash，使用起来较为困难。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="Git-all-secret功能描述"><a href="#Git-all-secret功能描述" class="headerlink" title="Git-all-secret功能描述"></a>Git-all-secret功能描述</h2><ul><li>克隆多个某组织的 public/private 有仓库并扫描；</li><li>克隆多个某组织用户的 public/private 仓库扫描；</li><li>克隆一个某组织的 public/private 仓库并扫描；</li><li>克隆一个某用户的 public/private 仓库并扫描；</li><li>克隆一个某用户的 public/secret gist （代码片段管理服务）并扫描；</li><li>克隆一个某组织团队的仓库并扫描；</li><li>克隆和扫描Github企业仓库还有gists；</li></ul><h2 id="扫描过程需要借助的开源工具"><a href="#扫描过程需要借助的开源工具" class="headerlink" title="扫描过程需要借助的开源工具"></a>扫描过程需要借助的开源工具</h2><ul><li>truffleHog - 扫描高熵值字符串和用户提供的正则表达式；</li><li>repo-supervisor扫描在js和json文件中的高熵值字符串；</li></ul><p>所有工具中的输出文件最终会合并为一个输出文件</p><h2 id="新手入门使用"><a href="#新手入门使用" class="headerlink" title="新手入门使用"></a>新手入门使用</h2><h4 id="下载docker"><a href="#下载docker" class="headerlink" title="下载docker"></a>下载docker</h4><p>运行Git-all-secrets最简便的方法是使用Docker</p><p>获取Docker：apt install docker docker-compose</p><h4 id="下载Git-all-secrets"><a href="#下载Git-all-secrets" class="headerlink" title="下载Git-all-secrets"></a>下载Git-all-secrets</h4><p>git clone <a href="https://github.com/anshumanbh/git-all-secrets.git">https://github.com/anshumanbh/git-all-secrets.git</a></p><h4 id="运行git-all-secrets"><a href="#运行git-all-secrets" class="headerlink" title="运行git-all-secrets"></a>运行git-all-secrets</h4><ul><li><p>运行 docker run –rm -it abhartiya/tools_gitallsecrets –help 查看帮助信息</p></li><li><p>运行 docker run -it abhartiya/tools_gitallsecrets -token=&lt;&gt; -org=&lt;&gt; 扫描组织</p></li><li><p>运行 docker run -it abhartiya/tools_gitallsecrets -token=&lt;&gt; -org=&lt;&gt; -toolName=&lt;&gt; 选择待定工具，toolName=thog or repo-supervisor</p></li><li><p>运行 docker run -it abhartiya/tools_gitallsecrets -token=&lt;&gt; -org=&lt;&gt; -toolName=thog -thogEntropy truffleHog 的默认正则和高熵设置</p></li><li><p>当容器完成运行，输入 docker ps -a 返回容器ID</p></li><li><p>获得容器ID以后，输入 docker cp :/root/results.txt 来获取结果文件</p></li></ul><h4 id="标志-选项"><a href="#标志-选项" class="headerlink" title="标志/选项"></a>标志/选项</h4><ul><li>-token= Github访问令牌。如果未授权请求Github API会被限速</li><li>-org= 组织扫描。他会扫描组织中的所有公共仓库，以及用户的gists。如果你使用的是该组织用户的token，他还会克隆并扫描该用户的所有私密gitsts，以及所有该用户有权限访问的私有仓库</li><li>-user= 用户扫描。他会扫描当前用户的所有仓库和gists，扫描私有仓库请使用scanPrivateReposOnly标志，以及SSHkey</li><li>-repoURL= httpsURL 仓库扫描。他只会扫描当前仓库。如果你希望扫描私有仓库，请提供SSH URL和SSHkey，以及scanPrivateReposOnly标志</li><li>-gistURL= httpsURL Gist扫描。他只会扫描Gist。如果你知道私密gist的httpsURL，他也能够访问</li><li>-output= 输出结果文件，默认是result.txt</li><li>-cloneForks= 这是一个布尔标志。默认设置为0，不克隆forks，如果设置为1，他就会克隆forks</li><li>-orgOnly= 这也是一个布尔标志。默认设置为0。如果只扫描组织仓库而不扫描用户的仓库，请将它设置为1</li><li>-toolName= 这是规范扫描工具的标志。默认他使用all，thog和repo-supervisor</li><li>-scanPrivateReposOnly= 这是规范是否扫描用户私有仓库的标志。他只能工作在user、repoURL、org标志</li><li>-enterpriseURL= 企业GithubURL的标志，如果你希望扫描企业仓库，就选这个</li><li>-threads= 默认线程10</li><li>-thogEntropy= 开启高熵提取，默认是false。设置为true会有大量的垃圾信息，在比较大的目标上，不建议开启。如果设置为false，则意味着truffleHog只会提取基于rules.json文件中的正则结果</li><li>-blacklist= 不需要扫描的仓库名称，以逗号分割</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li><p>Token选项不能为空</p></li><li><p>Org user repoURL gistURL 不能都设置为空，至少需要提供一个选项。如果你提供了多个选项，他的顺序是org&gt;user&gt;repoURL&gt;gistURL。如果你只需要运行在特定用户上，那就不需要提供org选项</p></li><li><p>当定义scanPrivateReposOnly标志时：</p><p>​    1.必须将包含的SSH-key的卷载入到Docker容器中，使用 -v 选项</p><p>​    2.他应该在扫描私有仓库时使用，使用SSH url，而不是https url</p><p>​    3.确保使用了私有仓库/gist的用户token，否则会报错</p><p>​    4.如果你想在没有手动干扰的情况下运行，请不要设置SSH key的密钥密码</p></li><li><p>当定义teamName标志的时候，提供一个团队成 员的token非常重要，否则可能会出现意外结果</p></li><li><p>当定义enterpriseURL标志的时候，即使你提供了http URL，他也始终会考虑ssh key。所有企业克隆/扫描都是通过ssh url，而不是https url</p></li></ul><p>综上，请确保使用了SSH key，并且没有设置密钥密码</p><h2 id="扫描"><a href="#扫描" class="headerlink" title="扫描"></a>扫描</h2><h3 id="扫描私有仓库"><a href="#扫描私有仓库" class="headerlink" title="扫描私有仓库"></a>扫描私有仓库</h3><p>扫描私有仓库最稳妥的方法是使用SSH URL克隆。实现这个你需要将SSH key添加到Github用户。</p><p>用户配置参考：<a href="https://help.github.com/en/articles/adding-a-new-ssh-key-to-your-github-account">https://help.github.com/en/articles/adding-a-new-ssh-key-to-your-github-account</a></p><p>确保这个key没有密码设置。有了SSH key以后，将它挂载到Docker容器中，运行如下命令：</p><p><code>docker run -it -v ~/.ssh/id_rsa_personal:/root/.ssh/id_rsa abhartiya/tools_gitallsecrets -token=&lt;&gt; -user=&lt;&gt; -scanPrivateReposOnly</code></p><p>OR</p><p><code>docker run -it -v ~/.ssh/id_rsa_personal:/root/.ssh/id_rsa abhartiya/tools_gitallsecrets -token=&lt;&gt; -repoURL=&lt;&gt; -scanPrivateReposOnly</code></p><p>将本地的personal SSH-key存储到Docker内部容器 /root/.ssh/id_rsa，git-all-secrets会试图通过存储在 /root/.ssh/id_rsa 的ssh key来克隆仓库</p><h3 id="扫描组织团队"><a href="#扫描组织团队" class="headerlink" title="扫描组织团队"></a>扫描组织团队</h3><p>Github API限制了私有仓库环境。尝试使用非管理员用户扫描组织，需要给用户添加仓库的访问权限。如果非要扫描组织团队，可以运行：</p><p>docker run –it -v ~/.ssh/id_rsa_personal:/root/.ssh/id_rsa abhartiya/tools_gitallsecrets -token=&lt;&gt; -org=&lt;&gt; -teamName &lt;&gt;</p><h3 id="扫描企业Github"><a href="#扫描企业Github" class="headerlink" title="扫描企业Github"></a>扫描企业Github</h3><p>git-all-secrets支持扫描企业仓库，使用enterpriseURL选项：</p><h4 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h4><p>docker run -it -v ~/.ssh/id_rsa_gitenterprise:/root/.ssh/id_rsa -token <token> -enterpriseURL <a href="https://github/">https://github</a>.<org>.com/api/v3 -repoURL <a href="https://github/">https://github</a>.<org>.com/<user>/<repo>.git</p><h4 id="实例2"><a href="#实例2" class="headerlink" title="实例2"></a>实例2</h4><p>docker run -it -v ~/.ssh/id_rsa_gitenterprise:/root/.ssh/id_rsa -token <token> -enterpriseURL <a href="https://github/">https://github</a>.<org>.com/api/v3 -repoURL <a href="https://github/">https://github</a>.<org>.com/<user>/<repo>.git -toolName thog -thogEntropy</p><h4 id="实例3"><a href="#实例3" class="headerlink" title="实例3"></a>实例3</h4><p>docker run -it -v ~/.ssh/id_rsa_gitenterprise:/root/.ssh/id_rsa -token <token> -enterpriseURL <a href="https://github/">https://github</a>.<org>.com/api/v3 -user <username> -scanPrivateReposOnly</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><p>可以添加自己的正则表达式，在docker run的时候使用-v $(pwd)/rules.json:/root/truffleHog/rules.json。可以使用默认正则表达式，如果需要，也可以用truffleHog提供的高熵字符串。可以通过repo-supervisor工具搜索.js和.json中的高熵字符串。可以搜索用户的Gist，大多数工具都没这个功能。有新工具可以很容易地集成到git-all-secrets。支持扫描企业Github orgs/uesrs/repos/gists。大多数工具只扫描单个仓库，git-all-secrets可以一次扫描多个。</p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google Hacking</title>
      <link href="/2022/03/26/google-hacking/"/>
      <url>/2022/03/26/google-hacking/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍Google中的搜索语法，利用google语法去精准定位一些页面。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="Google-Hacking"><a href="#Google-Hacking" class="headerlink" title="Google Hacking"></a>Google Hacking</h2><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><table><thead><tr><th>通配符</th><th>语义</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>+</td><td>包含关键词</td><td>+前面必须要有一个空格</td><td>admin +login</td></tr><tr><td>-</td><td>排除关键词</td><td>-前面必须要有一个空格</td><td>mysql -csdn</td></tr><tr><td>~</td><td>同义词</td><td>~前面必须要有一个空格</td><td>mysql ~csdn</td></tr><tr><td>*</td><td>模糊查询</td><td>*代替任意字符</td><td>mysql**</td></tr><tr><td>“”</td><td>强调</td><td>-</td><td>“mysql”</td></tr></tbody></table><h3 id="高级语法"><a href="#高级语法" class="headerlink" title="高级语法"></a>高级语法</h3><p>语法：语句:关键词</p><table><thead><tr><th>语法</th><th>语义</th></tr></thead><tbody><tr><td>intitle</td><td>包含标题</td></tr><tr><td>intext</td><td>包含内容</td></tr><tr><td>filetyepe</td><td>文件类型</td></tr><tr><td>info</td><td>基本信息</td></tr><tr><td>site</td><td>指定网站</td></tr><tr><td>inurl</td><td>包含某个url</td></tr><tr><td>link</td><td>包含指定链接的网页</td></tr><tr><td>cache</td><td>显示页面的缓存版本</td></tr><tr><td>numberange</td><td>搜索一个数字</td></tr></tbody></table><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p><img src="https://imgtp.apqiang.com/2022/03/26/0ZuyuNYp.png"></p><ul><li>搜索目标包含后台的页面</li></ul><p><code>site:&quot;some-keywords.com&quot; intitle:login intext: 管理|后台|登录|用户名|密码|验证码|系统|账号|manage|admin|login|system</code></p><ul><li>搜索目标是否有列目录</li></ul><p><code>site:&quot;some-keywords.com&quot; intext: index of / | ../ | Parent Directory</code></p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github Hacking</title>
      <link href="/2022/03/26/github-hacking/"/>
      <url>/2022/03/26/github-hacking/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍Github中的搜索语法，查询项目公开的源码。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="Github-Hacking"><a href="#Github-Hacking" class="headerlink" title="Github Hacking"></a>Github Hacking</h2><p>您可以在所有公共GitHub存储库中搜索以下类型的信息，以及您有权访问的所有私有GitHub存储库：</p><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><ul><li>Repositories</li><li>Topics</li><li>Issues and pull requests</li><li>Code</li><li>Commits</li><li>Users</li><li>Wikis</li></ul><p>参考：</p><ul><li>Searching for repositories</li><li>Searching topics</li><li>Searching code</li><li>Searching commits</li><li>Searching issues and pull requests</li><li>Searching users</li><li>Searching wikis</li><li>Searching in forks</li></ul><p>您可以使用 <em>搜索</em> 页面或 <em>高级搜索</em> 页面搜索GitHub。</p><p>您可以使用 &gt; , &gt;= , &lt; , 和 &lt;= 搜索是大于，大于或等于，小于和小于或等于另一个值的值。</p><h3 id="搜索仓库"><a href="#搜索仓库" class="headerlink" title="搜索仓库"></a>搜索仓库</h3><table><thead><tr><th>Query</th><th>Example</th></tr></thead><tbody><tr><td>&gt;_n_</td><td>cats stars:&gt;1000 匹配关键字”cats”且star大于1000的仓库</td></tr><tr><td>&gt;=_n_</td><td>cats topics:&gt;=5 匹配关键字”cats”且标签数量大于等于5的仓库</td></tr><tr><td>&lt;_n_</td><td>cats size:&lt;10000 匹配关键字”cats”且文件小于10KB的仓库</td></tr><tr><td>&lt;=_n_</td><td>cats stars:&lt;=50 匹配关键字”cats”且star小于等于50的仓库</td></tr><tr><td>_n_..*</td><td>cats stars:10..* 匹配关键字”cats”且star大于10的仓库</td></tr><tr><td>*.._n_</td><td>cats stars:*..10 匹配关键字”cats”且star小于等于10的仓库</td></tr><tr><td>n..n</td><td>cats stars:10..50 匹配关键字”cats”且star大于10且小于50的仓库</td></tr><tr><td>_n_..*</td><td>cats stars:10..* 匹配关键字”cats”且star大于等于10的仓库</td></tr><tr><td>*.._n_</td><td>cats stars:*..10 匹配关键字”cats”且star小于等于10的仓库</td></tr><tr><td>n..n</td><td>cats stars:10..50 匹配关键字”cats”且star大于10且小于50的仓库</td></tr></tbody></table><h3 id="搜索代码"><a href="#搜索代码" class="headerlink" title="搜索代码"></a>搜索代码</h3><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>只能搜索小于384 KB的文件</li><li>只能搜索小于500,000个文件的存储库</li><li>登录的用户可以搜索所有公共存储库</li><li>除 filename 搜索外，搜索源代码时必须至少包含一个搜索词。例如，搜索 language:javascript 无效，而是这样： amazing language:javascript。</li><li>搜索结果最多可以显示来自同一个文件的两个片段，但文件中可能会有更多结果。</li><li>您不能将以下通配符用作搜索查询的一部分：. , : ; / \ ‘ “ = * ! ? # $ &amp; + ^ | ~ &lt; &gt; ( ) { } [ ]。搜索将忽略这些符号。</li></ul><h4 id="日期条件"><a href="#日期条件" class="headerlink" title="日期条件"></a>日期条件</h4><p>cats pushed:&lt;2012-07-05 搜索在2012年07月05日前push代码，且cats作为关键字</p><p>cats pushed:2016-04-30..2016-07-04 日期区间</p><p>cats created:&gt;=2017-04-01 创建时间</p><h4 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h4><p>AND、OR、NOT</p><h4 id="排除运算"><a href="#排除运算" class="headerlink" title="排除运算"></a>排除运算</h4><p>cats pushed:&lt;2012-07-05 -language:java 搜索在2012年07月05日前push代码，且cats作为关键字，排除 java 语言仓库。</p><h4 id="包含搜索"><a href="#包含搜索" class="headerlink" title="包含搜索"></a>包含搜索</h4><p>cats in:file 搜索文件中包含cats的代码</p><p>cats in:path 搜索路径中包含cats的代码</p><p>cats in:path,file 搜索路劲、文件中包含cats的代码</p><p>console path:app/public language:javascript 搜索关键字console，且语言为javascript，在app/public下的代码</p><h4 id="主题搜索"><a href="#主题搜索" class="headerlink" title="主题搜索"></a>主题搜索</h4><p>user:USERNAME 用户名搜索</p><p>org:ORGNAME 组织搜索</p><p>repo:USERNAME/REPOSITORY 指定仓库搜索</p><h4 id="文件大小"><a href="#文件大小" class="headerlink" title="文件大小"></a>文件大小</h4><p>size:&gt;1000 搜索大小大于1KB的文件</p><h4 id="文件名称"><a href="#文件名称" class="headerlink" title="文件名称"></a>文件名称</h4><p>filename:config.php language:php 搜索文件名为config.php，且语言为php的代码。例如搜索Java项目配置文件：mail filename:.properties</p><p><img src="https://img1.imgtp.com/2022/03/26/Du5ZaVml.png"></p><h4 id="扩展名"><a href="#扩展名" class="headerlink" title="扩展名"></a>扩展名</h4><p>extension:EXTENSION 指定扩展名搜索</p><p>例如：extension:properties jdbc</p><h2 id="自动化工具"><a href="#自动化工具" class="headerlink" title="自动化工具"></a>自动化工具</h2><p><a href="https://github.com/UnkL4b/GitMiner">https://github.com/UnkL4b/GitMiner</a></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">python3 gitminer-v2.0.py -c cookie.txt  -q &#39;extension:properties jdbc&#39; -r &#39;password(.*)&#39; -m passwords<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需要将cookie信息存入文件中</p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开放漏洞情报&amp;开源情报信息收集（OSINT）</title>
      <link href="/2022/03/25/kai-yuan-lou-dong-qing-bao/"/>
      <url>/2022/03/25/kai-yuan-lou-dong-qing-bao/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍常见的漏洞信息收集和常见的情报信息收集。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="开发漏洞情报"><a href="#开发漏洞情报" class="headerlink" title="开发漏洞情报"></a>开发漏洞情报</h2><h3 id="常用网站"><a href="#常用网站" class="headerlink" title="常用网站"></a>常用网站</h3><ul><li>CVE <a href="https://cve.mitre.org/">https://cve.mitre.org</a></li><li>Exploit-DB <a href="https://www.exploit-db.com/">https://www.exploit-db.com/</a></li><li>CX Security <a href="https://cxsecurity.com/">https://cxsecurity.com/</a></li><li>CNVD <a href="https://www.cnvd.org.cn/">https://www.cnvd.org.cn/</a></li><li>securitytracker （网站现已关闭）</li></ul><h3 id="Search-Exploit-DB"><a href="#Search-Exploit-DB" class="headerlink" title="Search Exploit-DB"></a>Search Exploit-DB</h3><p><img src="https://img1.imgtp.com/2022/03/25/dJp5wuQ4.png"></p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>搜索Windows提权漏洞</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">searchsploit -t windows <span class="token builtin class-name">local</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img1.imgtp.com/2022/03/25/Sd0TTUUZ.png"></p><p>搜索Apache漏洞</p><p><img src="https://img1.imgtp.com/2022/03/25/Gu6eUnjF.png"></p><h2 id="开源情报信息搜集（OSINT）"><a href="#开源情报信息搜集（OSINT）" class="headerlink" title="开源情报信息搜集（OSINT）"></a>开源情报信息搜集（OSINT）</h2><h3 id="搜索引擎语法"><a href="#搜索引擎语法" class="headerlink" title="搜索引擎语法"></a>搜索引擎语法</h3><ul><li>百度 <a href="http://www.baidu.com/">http://www.baidu.com</a></li><li>谷歌 <a href="http://www.google.com/">http://www.google.com</a></li><li>必应 <a href="http://www.bing.com/">http://www.bing.com</a></li></ul><h3 id="在线接口"><a href="#在线接口" class="headerlink" title="在线接口"></a>在线接口</h3><table><thead><tr><th>url</th><th>简介</th></tr></thead><tbody><tr><td><a href="https://www.webscan.cc/">https://www.webscan.cc/</a></td><td>主要解析域名ip，同时提供该同服ip站点列表，但多数解析为cdn</td></tr><tr><td><a href="https://search.censys.io/">https://search.censys.io/</a></td><td>根据ip查询开启的服务信息，查看子域关系图。也可以根据body信息查询含有关键字的主机</td></tr><tr><td><a href="https://crt.sh/">https://crt.sh/</a></td><td>可以查询域的OU信息和证书信息</td></tr><tr><td><a href="https://dnsdumpster.com/">https://dnsdumpster.com/</a></td><td>加载较慢，可以查询解析的ip和开启的服务以及服务器的地域</td></tr><tr><td><a href="https://www.threatcrowd.org/">https://www.threatcrowd.org/</a></td><td>关系图、whois信息、dns历史解析、开启的服务、子域以及对应的IP</td></tr><tr><td><a href="https://dnslytics.com/">https://dnslytics.com</a></td><td>根据域名可以查询顶级域不同的域名，可查询路由信息和信息提供者。根据ip查询可以较全的whois信息和开启的服务</td></tr><tr><td><a href="https://pentest-tools.com/information-gathering/find-subdomains-of-domain">https://pentest-tools.com/information-gathering/find-subdomains-of-domain</a></td><td>可以扫描子域名，但是每天只有一次免费的机会，该网站的在线工具都是付费使用</td></tr><tr><td><a href="https://viewdns.info/">https://viewdns.info</a></td><td>有挺多功能，反查ip、whois查询、ip历史、端口扫描等，但是加载慢</td></tr><tr><td><a href="http://www.yunsee.cn/finger.html">http://www.yunsee.cn/finger.html</a></td><td>需要注册、邀请码</td></tr><tr><td><a href="https://www.aizhan.com/">https://www.aizhan.com/</a></td><td>可以查询访问量、子域等</td></tr><tr><td><a href="https://phpinfo.me/domain">https://phpinfo.me/domain</a></td><td>爆破子域名</td></tr></tbody></table><h3 id="相关整合工具"><a href="#相关整合工具" class="headerlink" title="相关整合工具"></a>相关整合工具</h3><p><a href="https://github.com/rshipp/awesome-malware-analysis/blob/main/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90%E5%A4%A7%E5%90%88%E9%9B%86.md">https://github.com/rshipp/awesome-malware-analysis/blob/main/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90%E5%A4%A7%E5%90%88%E9%9B%86.md</a></p><p>在线恶意软件分析整合</p><h3 id="DNS历史解析记录"><a href="#DNS历史解析记录" class="headerlink" title="DNS历史解析记录"></a>DNS历史解析记录</h3><p><a href="https://www.dnsdb.io/zh-cn/">https://www.dnsdb.io/zh-cn/</a></p><p><a href="https://viewdns.info/">https://viewdns.info/</a></p><h3 id="信息收集在线工具合集"><a href="#信息收集在线工具合集" class="headerlink" title="信息收集在线工具合集"></a>信息收集在线工具合集</h3><p><a href="https://lovebear.top/info/cn/index.html">https://lovebear.top/info/cn/index.html</a></p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关联信息生成</title>
      <link href="/2022/03/25/guan-lian-xin-xi-sheng-cheng/"/>
      <url>/2022/03/25/guan-lian-xin-xi-sheng-cheng/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍利用已经收集的个人信息来生成字典。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="关联信息生成"><a href="#关联信息生成" class="headerlink" title="关联信息生成"></a>关联信息生成</h2><p>在渗透前期工作开展之前，需要对目标的各种信息进行分析、拆分、组合。</p><p>例如：赫尔巴斯亚基国</p><p>根据地域习惯、宗教、互联网开发信息等信息进行简要拆分，假设获取的信息如下：</p><ul><li>当地人爱好吃橙子</li><li>当地人信奉伊斯兰教</li><li>IPV4地址开放IP段</li><li>相关社交网络公开的数据库</li></ul><p>根据宗教、习惯、IP地址、开放数据支持……等，为后续的字典生成、鱼叉、水坑攻击铺下基石。</p><h2 id="字典生成"><a href="#字典生成" class="headerlink" title="字典生成"></a>字典生成</h2><h3 id="pydictor"><a href="#pydictor" class="headerlink" title="pydictor"></a>pydictor</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git clone https:&#x2F;&#x2F;github.com&#x2F;LandGrey&#x2F;pydictor.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="生成字典"><a href="#生成字典" class="headerlink" title="生成字典"></a>生成字典</h4><p><img src="https://img1.imgtp.com/2022/03/25/Xb0E9vMT.png"></p><p>快速使用：<a href="https://github.com/LandGrey/pydictor/blob/master/docs/doc/usage.md">https://github.com/LandGrey/pydictor/blob/master/docs/doc/usage.md</a></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$python3 pydictor.py --sedb                              _ _      _              _ __  _   _  __| (_) ___| |_ ___  _ __             | &#39;_ \| | | |&#x2F; _&#96; | |&#x2F; __| __&#x2F; _ \| &#39;__|             | |_) | |_| | (_| | | (__| || (_) | |             | .__&#x2F; \__, |\__,_|_|\___|\__\___&#x2F;|_|             |_|    |___&#x2F;                                            Social Engineering Dictionary Builder                                            Build by LandGrey    ----------------------------[ command ]----------------------------    [+]help desc             [+]exit&#x2F;quit            [+]clear&#x2F;cls    [+]show option           [+]set option arguments [+]rm option    [+]len minlen maxlen     [+]head prefix          [+]tail suffix    [+]encode type           [+]occur L d s          [+]types L d s    [+]regex string          [+]level code           [+]leet code    [+]output directory      [+]run    ----------------------------[ option ]----------------------------    [+]cname                 [+]ename                [+]sname    [+]birth                 [+]usedpwd              [+]phone    [+]uphone                [+]hphone               [+]email    [+]postcode              [+]nickname             [+]idcard    [+]jobnum                [+]otherdate            [+]usedcharpydictor SEDB&gt;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>新版pydictor生成字典时存在问题，需要下载旧版pydictor</p><p>wget <a href="https://github.com/LandGrey/pydictor/archive/refs/tags/v2.0.5.zip">https://github.com/LandGrey/pydictor/archive/refs/tags/v2.0.5.zip</a></p></blockquote><h4 id="合并去重"><a href="#合并去重" class="headerlink" title="合并去重"></a>合并去重</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">python pydictor.py -tool unqbiner &#x2F;my&#x2F;all&#x2F;dict&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>只需要指定路径</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(kali㉿kali)-[~&#x2F;tools&#x2F;pydictor-2.0.5]└─$ python3 pydictor.py -tool uniqbiner ~&#x2F;tools&#x2F;pydictor-2.0.5&#x2F;results&#x2F;                              _ _      _              _ __  _   _  __| (_) ___| |_ ___  _ __                                               | &#39;_ \| | | |&#x2F; _&#96; | |&#x2F; __| __&#x2F; _ \| &#39;__|                                              | |_) | |_| | (_| | | (__| || (_) | |                                                 | .__&#x2F; \__, |\__,_|_|\___|\__\___&#x2F;|_|                                                 |_|    |___&#x2F;                            2.0.5#dev                        [+] Source of  :7869 lines[+] A total of :7869 lines[+] Store in   :&#x2F;home&#x2F;kali&#x2F;tools&#x2F;pydictor-2.0.5&#x2F;results&#x2F;uniqbiner_034233.txt [+] Cost       :0.2306 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主机发现</title>
      <link href="/2022/03/24/zhu-ji-fa-xian/"/>
      <url>/2022/03/24/zhu-ji-fa-xian/</url>
      
        <content type="html"><![CDATA[<p>开一个新坑，将市面上现在流传的 redteam 系列书籍进行一个学习记录，文章内容主要摘自某红队系列丛书。</p><p>本章节内容主要是介绍常见的主机扫描和服务扫描工具。</p><h2 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h2><h3 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h3><p><a href="https://nmap.org/">https://nmap.org/</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Mac os：brew <span class="token function">install</span> nmapCentos：yum <span class="token function">install</span> nmapUbuntu：apt <span class="token function">install</span> nmap<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="参考手册"><a href="#参考手册" class="headerlink" title="参考手册"></a>参考手册</h3><p><a href="https://nmap.org/man/zh/index.html">https://nmap.org/man/zh/index.html</a></p><h3 id="扫描方式"><a href="#扫描方式" class="headerlink" title="扫描方式"></a>扫描方式</h3><ul><li>TCP：-sT</li><li>SYN：-sS</li><li>ACK：-sA</li><li>UDP：-sU</li><li>RPC：-sR</li><li>ICMP：-sP</li><li>Disable Port Scan：-sn</li></ul><h3 id="常用的扫描方法"><a href="#常用的扫描方法" class="headerlink" title="常用的扫描方法"></a>常用的扫描方法</h3><ul><li>扫描10000端口、操作系统、版本</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -T4 -A <span class="token operator">&lt;</span>target<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>版本探测</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -sV <span class="token operator">&lt;</span>target<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>操作系统探测</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -O <span class="token operator">&lt;</span>target<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="其他技巧"><a href="#其他技巧" class="headerlink" title="其他技巧"></a>其他技巧</h3><ul><li>–host-timeout 主机超时 通常选值：18000</li><li>–scan-delay 报文时间间隔 通常选值：1000</li><li>-S &lt;源地址&gt; 定义扫描源地址，为了不被发现</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>nmap -v -iR 100000 -P0 -p 80</p><p><code>随机选择100000台主机扫描是否运行Web服务器（80端口）。由起始阶段发送探测报文来确定主机是否工作非常浪费时间，而且只需探测主机的一个端口，因此使用 -P0 禁止对主机列表。（-P0 就是 -Pn）</code></p><p>host company.com | cut -d ‘ ‘ -f 4 | nmap -v -iL -（host -l company.com | cut -d ‘ ‘ -f 4 | nmap -v -iL -）</p><p><code>进行DNS区域传输，已发现company.com中的主机，然后将IP地址提供给nmap</code></p><blockquote><p>host -l &lt;domain&gt; 需要有域系统的<strong>管理员权限</strong>，才可以列出所有子域名，一般情况下无法使用<br>cut -d ‘ ‘ -f 4 将输出终端的字符进行分割，-d 指定分割字符，指定分割位置<br>nmap -v -iL - 解析出来 ip 传给 nmap 扫描，-v 显示详细信息，-iL 指定传入的文件名</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><ul><li><p>-oN <File></p></li><li><p>-oX <XML File></p></li><li><p>-oG <filespec></p><p>Grep输出 参考：<a href="http://www.unspecific.com/nmap-oG-output">http://www.unspecific.com/nmap-oG-output</a></p></li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">sudo</span> nmap -O -oG - www.baidu.com  Nmap <span class="token number">7.92</span> scan initiated Thu Mar <span class="token number">24</span> 06:16:08 <span class="token number">2022</span> as: nmap -O -oG - www.baidu.comHost: <span class="token number">110.242</span>.68.3 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.3 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Ports: <span class="token number">80</span>/open/tcp//http///, <span class="token number">443</span>/open/tcp//https///     Ignored State: filtered <span class="token punctuation">(</span><span class="token number">998</span><span class="token punctuation">)</span>Seq Index: <span class="token number">256</span>   IP ID Seq: RandomizedNmap <span class="token keyword">done</span> at Thu Mar <span class="token number">24</span> 06:16:21 <span class="token number">2022</span> -- <span class="token number">1</span> IP address <span class="token punctuation">(</span><span class="token number">1</span> <span class="token function">host</span> up<span class="token punctuation">)</span> scanned <span class="token keyword">in</span> <span class="token number">12.63</span> seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">sudo</span> nmap www.baidu.com -oG - <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'/open/&#123;print $2&#125;'</span><span class="token number">110.242</span>.68.3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>awk ‘/open/{print $2}’ 正则匹配含 open 的行，以空格为分割取第二列</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">sudo</span> nmap <span class="token number">110.242</span>.68.4/29 -oG - -sPNmap <span class="token number">7.92</span> scan initiated Thu Mar <span class="token number">24</span> 06:28:33 <span class="token number">2022</span> as: nmap -oG - -sP <span class="token number">110.242</span>.68.4/29Host: <span class="token number">110.242</span>.68.1 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.2 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.3 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.4 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.5 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.6 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.7 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpNmap <span class="token keyword">done</span> at Thu Mar <span class="token number">24</span> 06:28:47 <span class="token number">2022</span> -- <span class="token number">8</span> IP addresses <span class="token punctuation">(</span><span class="token number">7</span> hosts up<span class="token punctuation">)</span> scanned <span class="token keyword">in</span> <span class="token number">14.25</span> seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="masscan"><a href="#masscan" class="headerlink" title="masscan"></a>masscan</h2><h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://github.com/robertdavidgraham/masscan">https://github.com/robertdavidgraham/masscan</a></p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> <span class="token function">apt-get</span> --assume-yes <span class="token function">install</span> <span class="token function">git</span> <span class="token function">make</span> gcc<span class="token function">git</span> clone https://github.com/robertdavidgraham/masscan<span class="token builtin class-name">cd</span> masscan<span class="token function">make</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>该工具兼容Nmap的参数</p></blockquote><p>现在可以直接apt安装</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">apt</span> <span class="token function">install</span> masscan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="高级选项"><a href="#高级选项" class="headerlink" title="高级选项"></a>高级选项</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> masscan <span class="token number">121.37</span>.71.222 --port <span class="token number">3389</span> --adapter-ip <span class="token number">192.168</span>.186.26<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img1.imgtp.com/2022/03/24/RmpdiIk8.png"></p><ul><li>–adapter-ip 指定发包的IP地址</li><li>–adapter-port 指定发包的源端口</li><li>–adapter-mac 指定发包的源MAC地址</li><li>–router-mac 指定网关的MAC地址</li><li>–exclude IP地址范围黑名单，防止masscan扫描</li><li>–includefile，-iL 读取一个范围列表进行扫描</li><li>–wait 指定网发送包后的等待时间，默认为10秒</li></ul><h2 id="nbtscan"><a href="#nbtscan" class="headerlink" title="nbtscan"></a>nbtscan</h2><p>kali中已经安装：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─$ <span class="token function">whereis</span> nbtscannbtscan: /usr/bin/nbtscan /usr/share/man/man1/nbtscan.1.gz                                                                                                              ┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─$ nbtscanNBTscan version <span class="token number">1.7</span>.1.This is a <span class="token function">free</span> software and it comes with absolutely no warranty.You can use, distribute and modify it under terms of GNU GPL <span class="token number">2</span>+.Usage:nbtscan <span class="token punctuation">[</span>-v<span class="token punctuation">]</span> <span class="token punctuation">[</span>-d<span class="token punctuation">]</span> <span class="token punctuation">[</span>-e<span class="token punctuation">]</span> <span class="token punctuation">[</span>-l<span class="token punctuation">]</span> <span class="token punctuation">[</span>-t timeout<span class="token punctuation">]</span> <span class="token punctuation">[</span>-b bandwidth<span class="token punctuation">]</span> <span class="token punctuation">[</span>-r<span class="token punctuation">]</span> <span class="token punctuation">[</span>-q<span class="token punctuation">]</span> <span class="token punctuation">[</span>-s separator<span class="token punctuation">]</span> <span class="token punctuation">[</span>-m retransmits<span class="token punctuation">]</span> <span class="token punctuation">(</span>-f filename<span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>scan_range<span class="token operator">></span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="nbtscan示例"><a href="#nbtscan示例" class="headerlink" title="nbtscan示例"></a>nbtscan示例</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nbtscan -r <span class="token number">192.168</span>.0.1/24扫描整个C段nbtscan <span class="token number">192.168</span>.0.1-100扫描一个范围nbtscan -v -s <span class="token builtin class-name">:</span> <span class="token number">192.168</span>.0.0/24以 <span class="token builtin class-name">:</span> 分割显示结果nbtscan -f <span class="token operator">&lt;</span>File<span class="token operator">></span>从文件读取扫描范围<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─$ nbtscan -v -s <span class="token string">' '</span> <span class="token number">192.168</span>.0.112 <span class="token number">192.168</span>.0.112 DESKTOP-R5A39I1 00U<span class="token number">192.168</span>.0.112 DESKTOP-R5A39I1 20U<span class="token number">192.168</span>.0.112 WORKGROUP       00G<span class="token number">192.168</span>.0.112 MAC <span class="token number">18</span>:26:49:4c:f8:4c                                                                                                              ┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─$ nbtscan -v -s <span class="token string">' '</span> <span class="token number">192.168</span>.0.112 <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $1&#125;'</span> <span class="token operator">|</span> <span class="token function">uniq</span><span class="token number">192.168</span>.0.112<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>awk ‘{print $1}’取第一列</p><p>uniq 筛选出重复字符串</p></blockquote><h2 id="hping3"><a href="#hping3" class="headerlink" title="hping3"></a>hping3</h2><p>hping3主要是测试防火墙的拦截规则，对网络设备进行测试</p><p><img src="https://img1.imgtp.com/2022/03/24/pC7lL5tA.png"></p><h3 id="常用模式"><a href="#常用模式" class="headerlink" title="常用模式"></a>常用模式</h3><ul><li>-0 –rawip IP原始报文</li><li>-1 –icmp ICMP模式</li><li>-2 –udp UDP模式</li><li>-8 –scan 扫描模式</li><li>-9 –listen 监听模式</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> hping3 --scan <span class="token number">1</span>-30,70-90 -S www.baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>SYN方式扫描主机端口</p></blockquote><p><img src="https://img1.imgtp.com/2022/03/24/vC16eD9o.png"></p><p>可以看到，目标主机回复：S..A，代表SYN/ACK</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> hping3 -S -a <span class="token number">114.114</span>.114.114 -p <span class="token number">53</span> <span class="token number">114.114</span>.114.114 -c <span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>测试防火墙对ICMP包的反应，是否支持traceroute，是否开放某个端口，对防火墙进行拒绝服务攻击（Dos attack）。例如，以Land Attack方式测试目标防火墙（Land Attack是将发送源地址设置为与目标地址相同，诱使目标机与自己不停地建立链接）。</p></blockquote><h3 id="DRDDOS"><a href="#DRDDOS" class="headerlink" title="DRDDOS"></a>DRDDOS</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> hping3 --udp -a <span class="token number">114.114</span>.114.114 -p <span class="token number">53</span> <span class="token number">114.114</span>.114.114 -c <span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>基于UDP的DOS</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
